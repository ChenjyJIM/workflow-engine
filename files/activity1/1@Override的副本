@Override
        public RestUsableGroupResp queryOnlineGroups() {
            RestUsableGroupResp allOnlineGroups = new RestUsableGroupResp();

            List<WxBBAccount> onlineAccounts = wxBBAccountMapper.listAllOnlineAccount();
            List<String> wxUins = new ArrayList<>();
            if (onlineAccounts != null) {
                onlineAccounts.forEach( wxBBAccount -> wxUins.add(wxBBAccount.getWxUin()));
            }
            if(wxUins.isEmpty()){
                return null;
            }
            List<WxGroupDivideMappingDO> wxGroupDivideMappingDOS = wxGroupDivideMappingMapper.listByWxUins(wxUins);
            Set<Long> wxGroupDivideIds = new HashSet<>();
            for (WxGroupDivideMappingDO wxGroupDivideMappingDO : wxGroupDivideMappingDOS) {
                wxGroupDivideIds.add(wxGroupDivideMappingDO.getGroupDivideId());
            }
            if(!wxGroupDivideIds.isEmpty()) {
                List<WxGroupDivideVO> wxGroupDivideVOS = new ArrayList<>();
                for (Long wxGroupDivideId : wxGroupDivideIds) {
                    WxGroupDivideVO wxGroupDivideVO = new WxGroupDivideVO();
                    WxGroupDivideConfigDO wxGroupDivideConfigDO =
                            wxGroupDivideConfigMapper.getById(wxGroupDivideId);
                    wxGroupDivideVO.setId(wxGroupDivideConfigDO.getId());
                    wxGroupDivideVO.setNote(wxGroupDivideConfigDO.getNote());
                    wxGroupDivideVO.setGmtModified(wxGroupDivideConfigDO.getGmtModified());
                    wxGroupDivideVO.setGmtCreate(wxGroupDivideConfigDO.getGmtCreate());
                    List<WxGroupDivideMappingDO> divideMappingDOS = wxGroupDivideMappingMapper
                            .queryByGroupDivideId(wxGroupDivideConfigDO.getId());
                    List<WxGroupMappingVO> wxGroupMappingVOS = new ArrayList<>();
                    if (divideMappingDOS != null) {
                        divideMappingDOS.forEach( divideMappingDO -> {
                            WxGroupMappingVO wxGroupMappingVO = new WxGroupMappingVO();
                            wxGroupMappingVO.setWxUin(divideMappingDO.getWxUin());
                            wxGroupMappingVO.setGroupName(divideMappingDO.getGroupName());
                            wxGroupMappingVO.setGroupDivideId(divideMappingDO.getGroupDivideId());
                            wxGroupMappingVO.setGmtCreate(divideMappingDO.getGmtCreate());
                            wxGroupMappingVO.setGmtModified(divideMappingDO.getGmtModified());
                            WxGroupDO wxGroupDO = wxGroupMapper.selectByWxUinAndNickName(Long.parseLong(divideMappingDO.getWxUin()), divideMappingDO.getGroupName());
                            wxGroupMappingVO.setId(wxGroupDO.getId());
                            wxGroupMappingVOS.add(wxGroupMappingVO);
                        });
                    }
                    wxGroupDivideVO.setWxGroupMappingList(wxGroupMappingVOS);

                    wxGroupDivideVOS.add(wxGroupDivideVO);
                    allOnlineGroups.setItems(wxGroupDivideVOS);
                }
            }else {
                allOnlineGroups.setItems(Collections.emptyList());
            }
            return allOnlineGroups;
        }

    @Override
        public RestUsableGroupResp queryAllGroups() {
        RestUsableGroupResp restUsableGroupResp = new RestUsableGroupResp();
        List<WxGroupWelcomeWordDO> wxGroupWelcomeWordDOS =
                wxGroupWelcomeWordMapper.queryGroupWelcomeWord(new WxGroupWelcomeWordQuery());
        List<String> allUsedGroupDivideIds = new ArrayList<>();
            if (wxGroupWelcomeWordDOS != null) {
                wxGroupWelcomeWordDOS.forEach(wxGroupWelcomeWordDO -> {
                    List<String> groupDivideIds = Arrays.asList(wxGroupWelcomeWordDO.getGroupDivideIds().split(","));
                    allUsedGroupDivideIds.addAll(groupDivideIds);
                });
                List<WxGroupDivideConfigDO> wxGroupDivideConfigDOS =
                        wxGroupDivideConfigMapper.queryAllGroupDivideConfig();
                List<WxGroupDivideVO> wxGroupDivideVOS = new ArrayList<>();
                wxGroupDivideConfigDOS.forEach(wxGroupDivideConfigDO -> {
                    WxGroupDivideVO wxGroupDivideVO = new WxGroupDivideVO();
                    if (allUsedGroupDivideIds.contains(wxGroupDivideConfigDO.getId().toString())) {
                        wxGroupDivideVO.setChecked(true);
                    } else {
                        wxGroupDivideVO.setChecked(false);
                    }
                    wxGroupDivideVO.setId(wxGroupDivideConfigDO.getId());
                    wxGroupDivideVO.setNote(wxGroupDivideConfigDO.getNote());
                    wxGroupDivideVO.setGmtCreate(wxGroupDivideConfigDO.getGmtCreate());
                    wxGroupDivideVO.setGmtModified(wxGroupDivideConfigDO.getGmtModified());
                    List<WxGroupDivideMappingDO> wxGroupDivideMappingDOS = wxGroupDivideMappingMapper
                            .queryByGroupDivideId(wxGroupDivideConfigDO.getId());
                    List<WxGroupMappingVO> wxGroupMappingVOS = new ArrayList<>();
                    if (wxGroupDivideMappingDOS != null) {
                        wxGroupDivideMappingDOS.forEach( divideMappingDO -> {
                            WxGroupMappingVO wxGroupMappingVO = new WxGroupMappingVO();
                            wxGroupMappingVO.setWxUin(divideMappingDO.getWxUin());
                            wxGroupMappingVO.setGroupName(divideMappingDO.getGroupName());
                            wxGroupMappingVO.setGroupDivideId(divideMappingDO.getGroupDivideId());
                            wxGroupMappingVO.setGmtCreate(divideMappingDO.getGmtCreate());
                            wxGroupMappingVO.setGmtModified(divideMappingDO.getGmtModified());
                            WxGroupDO wxGroupDO = wxGroupMapper.selectByWxUinAndNickName(Long.parseLong(divideMappingDO.getWxUin()), divideMappingDO.getGroupName());
                            wxGroupMappingVO.setId(wxGroupDO.getId());
                            wxGroupMappingVOS.add(wxGroupMappingVO);
                        });
                    }
                    wxGroupDivideVO.setWxGroupMappingList(wxGroupMappingVOS);
                    wxGroupDivideVOS.add(wxGroupDivideVO);
                });
                restUsableGroupResp.setItems(wxGroupDivideVOS);
                return restUsableGroupResp;
            } else {
                restUsableGroupResp.setItems(Collections.emptyList());
                return restUsableGroupResp;
            }
        }