<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduate.engine.mapper.PersonMemberMapper">
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="partisan" jdbcType="VARCHAR" property="partisan" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phone1" jdbcType="VARCHAR" property="phone1" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="others" jdbcType="VARCHAR" property="others" />
    <result column="person_public_duty" jdbcType="VARCHAR" property="personPublicDuty" />
    <result column="person_awards" jdbcType="VARCHAR" property="personAwards" />
    <result column="education_id" jdbcType="INTEGER" property="educationId" />
    <result column="person_member_id" jdbcType="INTEGER" property="personMemberId" />
    <result column="person_member_date" jdbcType="INTEGER" property="personMemberDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    person_id, inst_id, name, sex, birthday, ethnic, partisan, mail, phone1, phone2, 
    qq, wechat, others, person_public_duty, person_awards, education_id, person_member_id, 
    person_member_date, memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member (person_id, inst_id, name, 
      sex, birthday, ethnic, 
      partisan, mail, phone1, 
      phone2, qq, wechat, 
      others, person_public_duty, person_awards, 
      education_id, person_member_id, person_member_date, 
      memo, stop)
    values (#{personId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=INTEGER}, #{ethnic,jdbcType=VARCHAR}, 
      #{partisan,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, 
      #{phone2,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{others,jdbcType=VARCHAR}, #{personPublicDuty,jdbcType=VARCHAR}, #{personAwards,jdbcType=VARCHAR}, 
      #{educationId,jdbcType=INTEGER}, #{personMemberId,jdbcType=INTEGER}, #{personMemberDate,jdbcType=INTEGER}, 
      #{memo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        person_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ethnic != null">
        ethnic,
      </if>
      <if test="partisan != null">
        partisan,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="phone1 != null">
        phone1,
      </if>
      <if test="phone2 != null">
        phone2,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="others != null">
        others,
      </if>
      <if test="personPublicDuty != null">
        person_public_duty,
      </if>
      <if test="personAwards != null">
        person_awards,
      </if>
      <if test="educationId != null">
        education_id,
      </if>
      <if test="personMemberId != null">
        person_member_id,
      </if>
      <if test="personMemberDate != null">
        person_member_date,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        ethnic = #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        partisan = #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        others = #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        person_awards = #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        education_id = #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        person_member_id = #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        person_member_date = #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    set inst_id = #{instId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      ethnic = #{ethnic,jdbcType=VARCHAR},
      partisan = #{partisan,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR},
      person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      person_awards = #{personAwards,jdbcType=VARCHAR},
      education_id = #{educationId,jdbcType=INTEGER},
      person_member_id = #{personMemberId,jdbcType=INTEGER},
      person_member_date = #{personMemberDate,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_resume_id" jdbcType="INTEGER" property="personResumeId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="person_resume_comp" jdbcType="VARCHAR" property="personResumeComp" />
    <result column="person_resume_addr" jdbcType="VARCHAR" property="personResumeAddr" />
    <result column="person_resume_dept" jdbcType="VARCHAR" property="personResumeDept" />
    <result column="person_resume_post" jdbcType="VARCHAR" property="personResumePost" />
    <result column="person_resume_rank" jdbcType="INTEGER" property="personResumeRank" />
    <result column="person_resume_spec" jdbcType="VARCHAR" property="personResumeSpec" />
    <result column="person_resume_from" jdbcType="INTEGER" property="personResumeFrom" />
    <result column="person_resume_to" jdbcType="INTEGER" property="personResumeTo" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    person_resume_id, inst_id, person_id, person_resume_comp, person_resume_addr, person_resume_dept, 
    person_resume_post, person_resume_rank, person_resume_spec, person_resume_from, person_resume_to, 
    memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_resume
    where person_resume_id = #{personResumeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_resume
    where person_resume_id = #{personResumeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_resume (person_resume_id, inst_id, person_id, 
      person_resume_comp, person_resume_addr, person_resume_dept, 
      person_resume_post, person_resume_rank, person_resume_spec, 
      person_resume_from, person_resume_to, memo
      )
    values (#{personResumeId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{personResumeComp,jdbcType=VARCHAR}, #{personResumeAddr,jdbcType=VARCHAR}, #{personResumeDept,jdbcType=VARCHAR}, 
      #{personResumePost,jdbcType=VARCHAR}, #{personResumeRank,jdbcType=INTEGER}, #{personResumeSpec,jdbcType=VARCHAR}, 
      #{personResumeFrom,jdbcType=INTEGER}, #{personResumeTo,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personResumeId != null">
        person_resume_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="personResumeComp != null">
        person_resume_comp,
      </if>
      <if test="personResumeAddr != null">
        person_resume_addr,
      </if>
      <if test="personResumeDept != null">
        person_resume_dept,
      </if>
      <if test="personResumePost != null">
        person_resume_post,
      </if>
      <if test="personResumeRank != null">
        person_resume_rank,
      </if>
      <if test="personResumeSpec != null">
        person_resume_spec,
      </if>
      <if test="personResumeFrom != null">
        person_resume_from,
      </if>
      <if test="personResumeTo != null">
        person_resume_to,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personResumeId != null">
        #{personResumeId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="personResumeComp != null">
        #{personResumeComp,jdbcType=VARCHAR},
      </if>
      <if test="personResumeAddr != null">
        #{personResumeAddr,jdbcType=VARCHAR},
      </if>
      <if test="personResumeDept != null">
        #{personResumeDept,jdbcType=VARCHAR},
      </if>
      <if test="personResumePost != null">
        #{personResumePost,jdbcType=VARCHAR},
      </if>
      <if test="personResumeRank != null">
        #{personResumeRank,jdbcType=INTEGER},
      </if>
      <if test="personResumeSpec != null">
        #{personResumeSpec,jdbcType=VARCHAR},
      </if>
      <if test="personResumeFrom != null">
        #{personResumeFrom,jdbcType=INTEGER},
      </if>
      <if test="personResumeTo != null">
        #{personResumeTo,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_resume
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="personResumeComp != null">
        person_resume_comp = #{personResumeComp,jdbcType=VARCHAR},
      </if>
      <if test="personResumeAddr != null">
        person_resume_addr = #{personResumeAddr,jdbcType=VARCHAR},
      </if>
      <if test="personResumeDept != null">
        person_resume_dept = #{personResumeDept,jdbcType=VARCHAR},
      </if>
      <if test="personResumePost != null">
        person_resume_post = #{personResumePost,jdbcType=VARCHAR},
      </if>
      <if test="personResumeRank != null">
        person_resume_rank = #{personResumeRank,jdbcType=INTEGER},
      </if>
      <if test="personResumeSpec != null">
        person_resume_spec = #{personResumeSpec,jdbcType=VARCHAR},
      </if>
      <if test="personResumeFrom != null">
        person_resume_from = #{personResumeFrom,jdbcType=INTEGER},
      </if>
      <if test="personResumeTo != null">
        person_resume_to = #{personResumeTo,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where person_resume_id = #{personResumeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_resume
    set inst_id = #{instId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      person_resume_comp = #{personResumeComp,jdbcType=VARCHAR},
      person_resume_addr = #{personResumeAddr,jdbcType=VARCHAR},
      person_resume_dept = #{personResumeDept,jdbcType=VARCHAR},
      person_resume_post = #{personResumePost,jdbcType=VARCHAR},
      person_resume_rank = #{personResumeRank,jdbcType=INTEGER},
      person_resume_spec = #{personResumeSpec,jdbcType=VARCHAR},
      person_resume_from = #{personResumeFrom,jdbcType=INTEGER},
      person_resume_to = #{personResumeTo,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR}
    where person_resume_id = #{personResumeId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="milestone_id" jdbcType="INTEGER" property="milestoneId" />
    <result column="act_id" jdbcType="INTEGER" property="actId" />
    <result column="milestone_name" jdbcType="VARCHAR" property="milestoneName" />
    <result column="milestone_memo" jdbcType="VARCHAR" property="milestoneMemo" />
    <result column="milestone_from" jdbcType="INTEGER" property="milestoneFrom" />
    <result column="milestone_to" jdbcType="INTEGER" property="milestoneTo" />
    <result column="milestone_report" jdbcType="VARCHAR" property="milestoneReport" />
    <result column="milestone_monitor" jdbcType="VARCHAR" property="milestoneMonitor" />
  </resultMap>
  <sql id="Base_Column_List">
    milestone_id, act_id, milestone_name, milestone_memo, milestone_from, milestone_to, 
    milestone_report, milestone_monitor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_milestone
    where milestone_id = #{milestoneId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from act_milestone
    where milestone_id = #{milestoneId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_milestone (milestone_id, act_id, milestone_name, 
      milestone_memo, milestone_from, milestone_to, 
      milestone_report, milestone_monitor)
    values (#{milestoneId,jdbcType=INTEGER}, #{actId,jdbcType=INTEGER}, #{milestoneName,jdbcType=VARCHAR}, 
      #{milestoneMemo,jdbcType=VARCHAR}, #{milestoneFrom,jdbcType=INTEGER}, #{milestoneTo,jdbcType=INTEGER}, 
      #{milestoneReport,jdbcType=VARCHAR}, #{milestoneMonitor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_milestone
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="milestoneId != null">
        milestone_id,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="milestoneName != null">
        milestone_name,
      </if>
      <if test="milestoneMemo != null">
        milestone_memo,
      </if>
      <if test="milestoneFrom != null">
        milestone_from,
      </if>
      <if test="milestoneTo != null">
        milestone_to,
      </if>
      <if test="milestoneReport != null">
        milestone_report,
      </if>
      <if test="milestoneMonitor != null">
        milestone_monitor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="milestoneId != null">
        #{milestoneId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="milestoneName != null">
        #{milestoneName,jdbcType=VARCHAR},
      </if>
      <if test="milestoneMemo != null">
        #{milestoneMemo,jdbcType=VARCHAR},
      </if>
      <if test="milestoneFrom != null">
        #{milestoneFrom,jdbcType=INTEGER},
      </if>
      <if test="milestoneTo != null">
        #{milestoneTo,jdbcType=INTEGER},
      </if>
      <if test="milestoneReport != null">
        #{milestoneReport,jdbcType=VARCHAR},
      </if>
      <if test="milestoneMonitor != null">
        #{milestoneMonitor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update act_milestone
    <set>
      <if test="actId != null">
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="milestoneName != null">
        milestone_name = #{milestoneName,jdbcType=VARCHAR},
      </if>
      <if test="milestoneMemo != null">
        milestone_memo = #{milestoneMemo,jdbcType=VARCHAR},
      </if>
      <if test="milestoneFrom != null">
        milestone_from = #{milestoneFrom,jdbcType=INTEGER},
      </if>
      <if test="milestoneTo != null">
        milestone_to = #{milestoneTo,jdbcType=INTEGER},
      </if>
      <if test="milestoneReport != null">
        milestone_report = #{milestoneReport,jdbcType=VARCHAR},
      </if>
      <if test="milestoneMonitor != null">
        milestone_monitor = #{milestoneMonitor,jdbcType=VARCHAR},
      </if>
    </set>
    where milestone_id = #{milestoneId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update act_milestone
    set act_id = #{actId,jdbcType=INTEGER},
      milestone_name = #{milestoneName,jdbcType=VARCHAR},
      milestone_memo = #{milestoneMemo,jdbcType=VARCHAR},
      milestone_from = #{milestoneFrom,jdbcType=INTEGER},
      milestone_to = #{milestoneTo,jdbcType=INTEGER},
      milestone_report = #{milestoneReport,jdbcType=VARCHAR},
      milestone_monitor = #{milestoneMonitor,jdbcType=VARCHAR}
    where milestone_id = #{milestoneId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="comp_title_id" jdbcType="INTEGER" property="compTitleId" />
    <result column="comp_title_name" jdbcType="VARCHAR" property="compTitleName" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    comp_title_id, comp_title_name, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_title
    where comp_title_id = #{compTitleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company_title
    where comp_title_id = #{compTitleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into company_title (comp_title_id, comp_title_name, stop
      )
    values (#{compTitleId,jdbcType=INTEGER}, #{compTitleName,jdbcType=VARCHAR}, #{stop,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into company_title
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compTitleId != null">
        comp_title_id,
      </if>
      <if test="compTitleName != null">
        comp_title_name,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compTitleId != null">
        #{compTitleId,jdbcType=INTEGER},
      </if>
      <if test="compTitleName != null">
        #{compTitleName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update company_title
    <set>
      <if test="compTitleName != null">
        comp_title_name = #{compTitleName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where comp_title_id = #{compTitleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update company_title
    set comp_title_name = #{compTitleName,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where comp_title_id = #{compTitleId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="edu_id" jdbcType="INTEGER" property="eduId" />
    <result column="edu_name" jdbcType="VARCHAR" property="eduName" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    edu_id, edu_name, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from education
    where edu_id = #{eduId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from education
    where edu_id = #{eduId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into education (edu_id, edu_name, stop
      )
    values (#{eduId,jdbcType=INTEGER}, #{eduName,jdbcType=VARCHAR}, #{stop,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into education
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eduId != null">
        edu_id,
      </if>
      <if test="eduName != null">
        edu_name,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eduId != null">
        #{eduId,jdbcType=INTEGER},
      </if>
      <if test="eduName != null">
        #{eduName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update education
    <set>
      <if test="eduName != null">
        edu_name = #{eduName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where edu_id = #{eduId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update education
    set edu_name = #{eduName,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where edu_id = #{eduId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="sub_milestone_id" jdbcType="INTEGER" property="subMilestoneId" />
    <result column="act_sub_id" jdbcType="INTEGER" property="actSubId" />
    <result column="sub_milestone_name" jdbcType="VARCHAR" property="subMilestoneName" />
    <result column="sub_milestone_memo" jdbcType="VARCHAR" property="subMilestoneMemo" />
    <result column="sub_milestone_from" jdbcType="INTEGER" property="subMilestoneFrom" />
    <result column="sub_milestone_to" jdbcType="INTEGER" property="subMilestoneTo" />
    <result column="sub_milestone_report" jdbcType="VARCHAR" property="subMilestoneReport" />
    <result column="sub_milestone_monitor" jdbcType="VARCHAR" property="subMilestoneMonitor" />
  </resultMap>
  <sql id="Base_Column_List">
    sub_milestone_id, act_sub_id, sub_milestone_name, sub_milestone_memo, sub_milestone_from, 
    sub_milestone_to, sub_milestone_report, sub_milestone_monitor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_sub_milestone
    where sub_milestone_id = #{subMilestoneId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from act_sub_milestone
    where sub_milestone_id = #{subMilestoneId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_sub_milestone (sub_milestone_id, act_sub_id, sub_milestone_name, 
      sub_milestone_memo, sub_milestone_from, sub_milestone_to, 
      sub_milestone_report, sub_milestone_monitor
      )
    values (#{subMilestoneId,jdbcType=INTEGER}, #{actSubId,jdbcType=INTEGER}, #{subMilestoneName,jdbcType=VARCHAR}, 
      #{subMilestoneMemo,jdbcType=VARCHAR}, #{subMilestoneFrom,jdbcType=INTEGER}, #{subMilestoneTo,jdbcType=INTEGER}, 
      #{subMilestoneReport,jdbcType=VARCHAR}, #{subMilestoneMonitor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_sub_milestone
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subMilestoneId != null">
        sub_milestone_id,
      </if>
      <if test="actSubId != null">
        act_sub_id,
      </if>
      <if test="subMilestoneName != null">
        sub_milestone_name,
      </if>
      <if test="subMilestoneMemo != null">
        sub_milestone_memo,
      </if>
      <if test="subMilestoneFrom != null">
        sub_milestone_from,
      </if>
      <if test="subMilestoneTo != null">
        sub_milestone_to,
      </if>
      <if test="subMilestoneReport != null">
        sub_milestone_report,
      </if>
      <if test="subMilestoneMonitor != null">
        sub_milestone_monitor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subMilestoneId != null">
        #{subMilestoneId,jdbcType=INTEGER},
      </if>
      <if test="actSubId != null">
        #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneName != null">
        #{subMilestoneName,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneMemo != null">
        #{subMilestoneMemo,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneFrom != null">
        #{subMilestoneFrom,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneTo != null">
        #{subMilestoneTo,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneReport != null">
        #{subMilestoneReport,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneMonitor != null">
        #{subMilestoneMonitor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update act_sub_milestone
    <set>
      <if test="actSubId != null">
        act_sub_id = #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneName != null">
        sub_milestone_name = #{subMilestoneName,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneMemo != null">
        sub_milestone_memo = #{subMilestoneMemo,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneFrom != null">
        sub_milestone_from = #{subMilestoneFrom,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneTo != null">
        sub_milestone_to = #{subMilestoneTo,jdbcType=INTEGER},
      </if>
      <if test="subMilestoneReport != null">
        sub_milestone_report = #{subMilestoneReport,jdbcType=VARCHAR},
      </if>
      <if test="subMilestoneMonitor != null">
        sub_milestone_monitor = #{subMilestoneMonitor,jdbcType=VARCHAR},
      </if>
    </set>
    where sub_milestone_id = #{subMilestoneId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update act_sub_milestone
    set act_sub_id = #{actSubId,jdbcType=INTEGER},
      sub_milestone_name = #{subMilestoneName,jdbcType=VARCHAR},
      sub_milestone_memo = #{subMilestoneMemo,jdbcType=VARCHAR},
      sub_milestone_from = #{subMilestoneFrom,jdbcType=INTEGER},
      sub_milestone_to = #{subMilestoneTo,jdbcType=INTEGER},
      sub_milestone_report = #{subMilestoneReport,jdbcType=VARCHAR},
      sub_milestone_monitor = #{subMilestoneMonitor,jdbcType=VARCHAR}
    where sub_milestone_id = #{subMilestoneId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_period_person_id" jdbcType="INTEGER" property="instPeriodPersonId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_period_id" jdbcType="INTEGER" property="instPeriodId" />
    <result column="inst_period_person_order" jdbcType="TINYINT" property="instPeriodPersonOrder" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="person_title_id" jdbcType="INTEGER" property="personTitleId" />
    <result column="inst_period_person_memo" jdbcType="VARCHAR" property="instPeriodPersonMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_period_person_id, inst_id, inst_period_id, inst_period_person_order, person_id, 
    person_title_id, inst_period_person_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_period_person
    where inst_period_person_id = #{instPeriodPersonId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_period_person
    where inst_period_person_id = #{instPeriodPersonId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period_person (inst_period_person_id, inst_id, inst_period_id, 
      inst_period_person_order, person_id, person_title_id, 
      inst_period_person_memo)
    values (#{instPeriodPersonId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{instPeriodId,jdbcType=INTEGER}, 
      #{instPeriodPersonOrder,jdbcType=TINYINT}, #{personId,jdbcType=INTEGER}, #{personTitleId,jdbcType=INTEGER}, 
      #{instPeriodPersonMemo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instPeriodPersonId != null">
        inst_period_person_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instPeriodId != null">
        inst_period_id,
      </if>
      <if test="instPeriodPersonOrder != null">
        inst_period_person_order,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="personTitleId != null">
        person_title_id,
      </if>
      <if test="instPeriodPersonMemo != null">
        inst_period_person_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instPeriodPersonId != null">
        #{instPeriodPersonId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodId != null">
        #{instPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodPersonOrder != null">
        #{instPeriodPersonOrder,jdbcType=TINYINT},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="personTitleId != null">
        #{personTitleId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodPersonMemo != null">
        #{instPeriodPersonMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period_person
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodId != null">
        inst_period_id = #{instPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodPersonOrder != null">
        inst_period_person_order = #{instPeriodPersonOrder,jdbcType=TINYINT},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="personTitleId != null">
        person_title_id = #{personTitleId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodPersonMemo != null">
        inst_period_person_memo = #{instPeriodPersonMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_period_person_id = #{instPeriodPersonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period_person
    set inst_id = #{instId,jdbcType=INTEGER},
      inst_period_id = #{instPeriodId,jdbcType=INTEGER},
      inst_period_person_order = #{instPeriodPersonOrder,jdbcType=TINYINT},
      person_id = #{personId,jdbcType=INTEGER},
      person_title_id = #{personTitleId,jdbcType=INTEGER},
      inst_period_person_memo = #{instPeriodPersonMemo,jdbcType=VARCHAR}
    where inst_period_person_id = #{instPeriodPersonId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="act_sub_charger_id" jdbcType="INTEGER" property="actSubChargerId" />
    <result column="act_sub_id" jdbcType="INTEGER" property="actSubId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="act_sub_charger_order" jdbcType="INTEGER" property="actSubChargerOrder" />
    <result column="act_sub_charger_editer" jdbcType="BIT" property="actSubChargerEditer" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="act_sub_charger_duty" jdbcType="VARCHAR" property="actSubChargerDuty" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    act_sub_charger_id, act_sub_id, person_id, act_sub_charger_order, act_sub_charger_editer, 
    inst_id, act_sub_charger_duty, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_sub_charger
    where act_sub_charger_id = #{actSubChargerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from act_sub_charger
    where act_sub_charger_id = #{actSubChargerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_sub_charger (act_sub_charger_id, act_sub_id, person_id, 
      act_sub_charger_order, act_sub_charger_editer, inst_id, 
      act_sub_charger_duty, stop)
    values (#{actSubChargerId,jdbcType=INTEGER}, #{actSubId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{actSubChargerOrder,jdbcType=INTEGER}, #{actSubChargerEditer,jdbcType=BIT}, #{instId,jdbcType=INTEGER}, 
      #{actSubChargerDuty,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into act_sub_charger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actSubChargerId != null">
        act_sub_charger_id,
      </if>
      <if test="actSubId != null">
        act_sub_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="actSubChargerOrder != null">
        act_sub_charger_order,
      </if>
      <if test="actSubChargerEditer != null">
        act_sub_charger_editer,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="actSubChargerDuty != null">
        act_sub_charger_duty,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actSubChargerId != null">
        #{actSubChargerId,jdbcType=INTEGER},
      </if>
      <if test="actSubId != null">
        #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerOrder != null">
        #{actSubChargerOrder,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerEditer != null">
        #{actSubChargerEditer,jdbcType=BIT},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerDuty != null">
        #{actSubChargerDuty,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update act_sub_charger
    <set>
      <if test="actSubId != null">
        act_sub_id = #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerOrder != null">
        act_sub_charger_order = #{actSubChargerOrder,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerEditer != null">
        act_sub_charger_editer = #{actSubChargerEditer,jdbcType=BIT},
      </if>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="actSubChargerDuty != null">
        act_sub_charger_duty = #{actSubChargerDuty,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where act_sub_charger_id = #{actSubChargerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update act_sub_charger
    set act_sub_id = #{actSubId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      act_sub_charger_order = #{actSubChargerOrder,jdbcType=INTEGER},
      act_sub_charger_editer = #{actSubChargerEditer,jdbcType=BIT},
      inst_id = #{instId,jdbcType=INTEGER},
      act_sub_charger_duty = #{actSubChargerDuty,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where act_sub_charger_id = #{actSubChargerId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="task_check_point_id" jdbcType="INTEGER" property="taskCheckPointId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="task_check_point_name" jdbcType="VARCHAR" property="taskCheckPointName" />
    <result column="task_check_point_memo" jdbcType="VARCHAR" property="taskCheckPointMemo" />
    <result column="task_check_point_date" jdbcType="INTEGER" property="taskCheckPointDate" />
  </resultMap>
  <sql id="Base_Column_List">
    task_check_point_id, task_id, task_check_point_name, task_check_point_memo, task_check_point_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_check_point
    where task_check_point_id = #{taskCheckPointId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_check_point
    where task_check_point_id = #{taskCheckPointId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_check_point (task_check_point_id, task_id, task_check_point_name, 
      task_check_point_memo, task_check_point_date)
    values (#{taskCheckPointId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{taskCheckPointName,jdbcType=VARCHAR}, 
      #{taskCheckPointMemo,jdbcType=VARCHAR}, #{taskCheckPointDate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_check_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskCheckPointId != null">
        task_check_point_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskCheckPointName != null">
        task_check_point_name,
      </if>
      <if test="taskCheckPointMemo != null">
        task_check_point_memo,
      </if>
      <if test="taskCheckPointDate != null">
        task_check_point_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskCheckPointId != null">
        #{taskCheckPointId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskCheckPointName != null">
        #{taskCheckPointName,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckPointMemo != null">
        #{taskCheckPointMemo,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckPointDate != null">
        #{taskCheckPointDate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update task_check_point
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskCheckPointName != null">
        task_check_point_name = #{taskCheckPointName,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckPointMemo != null">
        task_check_point_memo = #{taskCheckPointMemo,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckPointDate != null">
        task_check_point_date = #{taskCheckPointDate,jdbcType=INTEGER},
      </if>
    </set>
    where task_check_point_id = #{taskCheckPointId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update task_check_point
    set task_id = #{taskId,jdbcType=INTEGER},
      task_check_point_name = #{taskCheckPointName,jdbcType=VARCHAR},
      task_check_point_memo = #{taskCheckPointMemo,jdbcType=VARCHAR},
      task_check_point_date = #{taskCheckPointDate,jdbcType=INTEGER}
    where task_check_point_id = #{taskCheckPointId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="union_id" jdbcType="INTEGER" property="unionId" />
    <result column="union_name" jdbcType="VARCHAR" property="unionName" />
    <result column="union_short" jdbcType="VARCHAR" property="unionShort" />
    <result column="union_eng_name" jdbcType="VARCHAR" property="unionEngName" />
    <result column="union_address" jdbcType="VARCHAR" property="unionAddress" />
    <result column="union_website" jdbcType="VARCHAR" property="unionWebsite" />
    <result column="union_wechat" jdbcType="VARCHAR" property="unionWechat" />
    <result column="union_qq" jdbcType="VARCHAR" property="unionQq" />
    <result column="union_others" jdbcType="VARCHAR" property="unionOthers" />
    <result column="union_register_date" jdbcType="INTEGER" property="unionRegisterDate" />
    <result column="union_introduction" jdbcType="VARCHAR" property="unionIntroduction" />
    <result column="union_memo" jdbcType="VARCHAR" property="unionMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    union_id, union_name, union_short, union_eng_name, union_address, union_website, 
    union_wechat, union_qq, union_others, union_register_date, union_introduction, union_memo, 
    stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from union
    where union_id = #{unionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from union
    where union_id = #{unionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into union (union_id, union_name, union_short, 
      union_eng_name, union_address, union_website, 
      union_wechat, union_qq, union_others, 
      union_register_date, union_introduction, union_memo, 
      stop)
    values (#{unionId,jdbcType=INTEGER}, #{unionName,jdbcType=VARCHAR}, #{unionShort,jdbcType=VARCHAR}, 
      #{unionEngName,jdbcType=VARCHAR}, #{unionAddress,jdbcType=VARCHAR}, #{unionWebsite,jdbcType=VARCHAR}, 
      #{unionWechat,jdbcType=VARCHAR}, #{unionQq,jdbcType=VARCHAR}, #{unionOthers,jdbcType=VARCHAR}, 
      #{unionRegisterDate,jdbcType=INTEGER}, #{unionIntroduction,jdbcType=VARCHAR}, #{unionMemo,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into union
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unionId != null">
        union_id,
      </if>
      <if test="unionName != null">
        union_name,
      </if>
      <if test="unionShort != null">
        union_short,
      </if>
      <if test="unionEngName != null">
        union_eng_name,
      </if>
      <if test="unionAddress != null">
        union_address,
      </if>
      <if test="unionWebsite != null">
        union_website,
      </if>
      <if test="unionWechat != null">
        union_wechat,
      </if>
      <if test="unionQq != null">
        union_qq,
      </if>
      <if test="unionOthers != null">
        union_others,
      </if>
      <if test="unionRegisterDate != null">
        union_register_date,
      </if>
      <if test="unionIntroduction != null">
        union_introduction,
      </if>
      <if test="unionMemo != null">
        union_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unionId != null">
        #{unionId,jdbcType=INTEGER},
      </if>
      <if test="unionName != null">
        #{unionName,jdbcType=VARCHAR},
      </if>
      <if test="unionShort != null">
        #{unionShort,jdbcType=VARCHAR},
      </if>
      <if test="unionEngName != null">
        #{unionEngName,jdbcType=VARCHAR},
      </if>
      <if test="unionAddress != null">
        #{unionAddress,jdbcType=VARCHAR},
      </if>
      <if test="unionWebsite != null">
        #{unionWebsite,jdbcType=VARCHAR},
      </if>
      <if test="unionWechat != null">
        #{unionWechat,jdbcType=VARCHAR},
      </if>
      <if test="unionQq != null">
        #{unionQq,jdbcType=VARCHAR},
      </if>
      <if test="unionOthers != null">
        #{unionOthers,jdbcType=VARCHAR},
      </if>
      <if test="unionRegisterDate != null">
        #{unionRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="unionIntroduction != null">
        #{unionIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="unionMemo != null">
        #{unionMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update union
    <set>
      <if test="unionName != null">
        union_name = #{unionName,jdbcType=VARCHAR},
      </if>
      <if test="unionShort != null">
        union_short = #{unionShort,jdbcType=VARCHAR},
      </if>
      <if test="unionEngName != null">
        union_eng_name = #{unionEngName,jdbcType=VARCHAR},
      </if>
      <if test="unionAddress != null">
        union_address = #{unionAddress,jdbcType=VARCHAR},
      </if>
      <if test="unionWebsite != null">
        union_website = #{unionWebsite,jdbcType=VARCHAR},
      </if>
      <if test="unionWechat != null">
        union_wechat = #{unionWechat,jdbcType=VARCHAR},
      </if>
      <if test="unionQq != null">
        union_qq = #{unionQq,jdbcType=VARCHAR},
      </if>
      <if test="unionOthers != null">
        union_others = #{unionOthers,jdbcType=VARCHAR},
      </if>
      <if test="unionRegisterDate != null">
        union_register_date = #{unionRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="unionIntroduction != null">
        union_introduction = #{unionIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="unionMemo != null">
        union_memo = #{unionMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where union_id = #{unionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update union
    set union_name = #{unionName,jdbcType=VARCHAR},
      union_short = #{unionShort,jdbcType=VARCHAR},
      union_eng_name = #{unionEngName,jdbcType=VARCHAR},
      union_address = #{unionAddress,jdbcType=VARCHAR},
      union_website = #{unionWebsite,jdbcType=VARCHAR},
      union_wechat = #{unionWechat,jdbcType=VARCHAR},
      union_qq = #{unionQq,jdbcType=VARCHAR},
      union_others = #{unionOthers,jdbcType=VARCHAR},
      union_register_date = #{unionRegisterDate,jdbcType=INTEGER},
      union_introduction = #{unionIntroduction,jdbcType=VARCHAR},
      union_memo = #{unionMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where union_id = #{unionId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="task_charger_id" jdbcType="INTEGER" property="taskChargerId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="task_charger_order" jdbcType="TINYINT" property="taskChargerOrder" />
    <result column="task_charger_editer" jdbcType="BIT" property="taskChargerEditer" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="task_charger_duty" jdbcType="VARCHAR" property="taskChargerDuty" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    task_charger_id, task_id, person_id, task_charger_order, task_charger_editer, inst_id, 
    task_charger_duty, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_charger
    where task_charger_id = #{taskChargerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_charger
    where task_charger_id = #{taskChargerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_charger (task_charger_id, task_id, person_id, 
      task_charger_order, task_charger_editer, inst_id, 
      task_charger_duty, stop)
    values (#{taskChargerId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{taskChargerOrder,jdbcType=TINYINT}, #{taskChargerEditer,jdbcType=BIT}, #{instId,jdbcType=INTEGER}, 
      #{taskChargerDuty,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_charger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskChargerId != null">
        task_charger_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="taskChargerOrder != null">
        task_charger_order,
      </if>
      <if test="taskChargerEditer != null">
        task_charger_editer,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="taskChargerDuty != null">
        task_charger_duty,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskChargerId != null">
        #{taskChargerId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="taskChargerOrder != null">
        #{taskChargerOrder,jdbcType=TINYINT},
      </if>
      <if test="taskChargerEditer != null">
        #{taskChargerEditer,jdbcType=BIT},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="taskChargerDuty != null">
        #{taskChargerDuty,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update task_charger
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="taskChargerOrder != null">
        task_charger_order = #{taskChargerOrder,jdbcType=TINYINT},
      </if>
      <if test="taskChargerEditer != null">
        task_charger_editer = #{taskChargerEditer,jdbcType=BIT},
      </if>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="taskChargerDuty != null">
        task_charger_duty = #{taskChargerDuty,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where task_charger_id = #{taskChargerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update task_charger
    set task_id = #{taskId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      task_charger_order = #{taskChargerOrder,jdbcType=TINYINT},
      task_charger_editer = #{taskChargerEditer,jdbcType=BIT},
      inst_id = #{instId,jdbcType=INTEGER},
      task_charger_duty = #{taskChargerDuty,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where task_charger_id = #{taskChargerId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="task_exec_id" jdbcType="INTEGER" property="taskExecId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="task_exec_name" jdbcType="VARCHAR" property="taskExecName" />
    <result column="task_exec_status" jdbcType="TINYINT" property="taskExecStatus" />
    <result column="task_exec_report" jdbcType="VARCHAR" property="taskExecReport" />
    <result column="task_exec_monitor" jdbcType="VARCHAR" property="taskExecMonitor" />
    <result column="task_exec_docs" jdbcType="VARCHAR" property="taskExecDocs" />
    <result column="task_exec_rate" jdbcType="DOUBLE" property="taskExecRate" />
    <result column="task_exec_date" jdbcType="INTEGER" property="taskExecDate" />
  </resultMap>
  <sql id="Base_Column_List">
    task_exec_id, task_id, task_exec_name, task_exec_status, task_exec_report, task_exec_monitor, 
    task_exec_docs, task_exec_rate, task_exec_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_exec
    where task_exec_id = #{taskExecId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_exec
    where task_exec_id = #{taskExecId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_exec (task_exec_id, task_id, task_exec_name, 
      task_exec_status, task_exec_report, task_exec_monitor, 
      task_exec_docs, task_exec_rate, task_exec_date
      )
    values (#{taskExecId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{taskExecName,jdbcType=VARCHAR}, 
      #{taskExecStatus,jdbcType=TINYINT}, #{taskExecReport,jdbcType=VARCHAR}, #{taskExecMonitor,jdbcType=VARCHAR}, 
      #{taskExecDocs,jdbcType=VARCHAR}, #{taskExecRate,jdbcType=DOUBLE}, #{taskExecDate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into task_exec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskExecId != null">
        task_exec_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskExecName != null">
        task_exec_name,
      </if>
      <if test="taskExecStatus != null">
        task_exec_status,
      </if>
      <if test="taskExecReport != null">
        task_exec_report,
      </if>
      <if test="taskExecMonitor != null">
        task_exec_monitor,
      </if>
      <if test="taskExecDocs != null">
        task_exec_docs,
      </if>
      <if test="taskExecRate != null">
        task_exec_rate,
      </if>
      <if test="taskExecDate != null">
        task_exec_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskExecId != null">
        #{taskExecId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskExecName != null">
        #{taskExecName,jdbcType=VARCHAR},
      </if>
      <if test="taskExecStatus != null">
        #{taskExecStatus,jdbcType=TINYINT},
      </if>
      <if test="taskExecReport != null">
        #{taskExecReport,jdbcType=VARCHAR},
      </if>
      <if test="taskExecMonitor != null">
        #{taskExecMonitor,jdbcType=VARCHAR},
      </if>
      <if test="taskExecDocs != null">
        #{taskExecDocs,jdbcType=VARCHAR},
      </if>
      <if test="taskExecRate != null">
        #{taskExecRate,jdbcType=DOUBLE},
      </if>
      <if test="taskExecDate != null">
        #{taskExecDate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update task_exec
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskExecName != null">
        task_exec_name = #{taskExecName,jdbcType=VARCHAR},
      </if>
      <if test="taskExecStatus != null">
        task_exec_status = #{taskExecStatus,jdbcType=TINYINT},
      </if>
      <if test="taskExecReport != null">
        task_exec_report = #{taskExecReport,jdbcType=VARCHAR},
      </if>
      <if test="taskExecMonitor != null">
        task_exec_monitor = #{taskExecMonitor,jdbcType=VARCHAR},
      </if>
      <if test="taskExecDocs != null">
        task_exec_docs = #{taskExecDocs,jdbcType=VARCHAR},
      </if>
      <if test="taskExecRate != null">
        task_exec_rate = #{taskExecRate,jdbcType=DOUBLE},
      </if>
      <if test="taskExecDate != null">
        task_exec_date = #{taskExecDate,jdbcType=INTEGER},
      </if>
    </set>
    where task_exec_id = #{taskExecId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update task_exec
    set task_id = #{taskId,jdbcType=INTEGER},
      task_exec_name = #{taskExecName,jdbcType=VARCHAR},
      task_exec_status = #{taskExecStatus,jdbcType=TINYINT},
      task_exec_report = #{taskExecReport,jdbcType=VARCHAR},
      task_exec_monitor = #{taskExecMonitor,jdbcType=VARCHAR},
      task_exec_docs = #{taskExecDocs,jdbcType=VARCHAR},
      task_exec_rate = #{taskExecRate,jdbcType=DOUBLE},
      task_exec_date = #{taskExecDate,jdbcType=INTEGER}
    where task_exec_id = #{taskExecId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="act_sub_id" jdbcType="INTEGER" property="actSubId" />
    <result column="act_id" jdbcType="INTEGER" property="actId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="act_sub_name" jdbcType="VARCHAR" property="actSubName" />
    <result column="act_sub_short" jdbcType="VARCHAR" property="actSubShort" />
    <result column="act_sub_eng_name" jdbcType="VARCHAR" property="actSubEngName" />
    <result column="Industy_id" jdbcType="TINYINT" property="industyId" />
    <result column="act_sub_date_from" jdbcType="INTEGER" property="actSubDateFrom" />
    <result column="act_sub_data_to" jdbcType="INTEGER" property="actSubDataTo" />
    <result column="act_sub_address" jdbcType="VARCHAR" property="actSubAddress" />
    <result column="act_sub_priority" jdbcType="TINYINT" property="actSubPriority" />
    <result column="act_sub_status_id" jdbcType="TINYINT" property="actSubStatusId" />
    <result column="act_sub_memo" jdbcType="VARCHAR" property="actSubMemo" />
    <result column="act_sub_split" jdbcType="INTEGER" property="actSubSplit" />
    <result column="act_sub_merge" jdbcType="INTEGER" property="actSubMerge" />
    <result column="act_sub_father_id" jdbcType="INTEGER" property="actSubFatherId" />
    <result column="act_sub_restart_memo" jdbcType="VARCHAR" property="actSubRestartMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    act_sub_id, act_id, inst_id, inst_sub_id, act_sub_name, act_sub_short, act_sub_eng_name, 
    Industy_id, act_sub_date_from, act_sub_data_to, act_sub_address, act_sub_priority, 
    act_sub_status_id, act_sub_memo, act_sub_split, act_sub_merge, act_sub_father_id, 
    act_sub_restart_memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_sub
    where act_sub_id = #{actSubId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity_sub
    where act_sub_id = #{actSubId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into activity_sub (act_sub_id, act_id, inst_id, 
      inst_sub_id, act_sub_name, act_sub_short, 
      act_sub_eng_name, Industy_id, act_sub_date_from, 
      act_sub_data_to, act_sub_address, act_sub_priority, 
      act_sub_status_id, act_sub_memo, act_sub_split, 
      act_sub_merge, act_sub_father_id, act_sub_restart_memo, 
      stop)
    values (#{actSubId,jdbcType=INTEGER}, #{actId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, 
      #{instSubId,jdbcType=INTEGER}, #{actSubName,jdbcType=VARCHAR}, #{actSubShort,jdbcType=VARCHAR}, 
      #{actSubEngName,jdbcType=VARCHAR}, #{industyId,jdbcType=TINYINT}, #{actSubDateFrom,jdbcType=INTEGER}, 
      #{actSubDataTo,jdbcType=INTEGER}, #{actSubAddress,jdbcType=VARCHAR}, #{actSubPriority,jdbcType=TINYINT}, 
      #{actSubStatusId,jdbcType=TINYINT}, #{actSubMemo,jdbcType=VARCHAR}, #{actSubSplit,jdbcType=INTEGER}, 
      #{actSubMerge,jdbcType=INTEGER}, #{actSubFatherId,jdbcType=INTEGER}, #{actSubRestartMemo,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into activity_sub
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actSubId != null">
        act_sub_id,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="actSubName != null">
        act_sub_name,
      </if>
      <if test="actSubShort != null">
        act_sub_short,
      </if>
      <if test="actSubEngName != null">
        act_sub_eng_name,
      </if>
      <if test="industyId != null">
        Industy_id,
      </if>
      <if test="actSubDateFrom != null">
        act_sub_date_from,
      </if>
      <if test="actSubDataTo != null">
        act_sub_data_to,
      </if>
      <if test="actSubAddress != null">
        act_sub_address,
      </if>
      <if test="actSubPriority != null">
        act_sub_priority,
      </if>
      <if test="actSubStatusId != null">
        act_sub_status_id,
      </if>
      <if test="actSubMemo != null">
        act_sub_memo,
      </if>
      <if test="actSubSplit != null">
        act_sub_split,
      </if>
      <if test="actSubMerge != null">
        act_sub_merge,
      </if>
      <if test="actSubFatherId != null">
        act_sub_father_id,
      </if>
      <if test="actSubRestartMemo != null">
        act_sub_restart_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actSubId != null">
        #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="actSubName != null">
        #{actSubName,jdbcType=VARCHAR},
      </if>
      <if test="actSubShort != null">
        #{actSubShort,jdbcType=VARCHAR},
      </if>
      <if test="actSubEngName != null">
        #{actSubEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        #{industyId,jdbcType=TINYINT},
      </if>
      <if test="actSubDateFrom != null">
        #{actSubDateFrom,jdbcType=INTEGER},
      </if>
      <if test="actSubDataTo != null">
        #{actSubDataTo,jdbcType=INTEGER},
      </if>
      <if test="actSubAddress != null">
        #{actSubAddress,jdbcType=VARCHAR},
      </if>
      <if test="actSubPriority != null">
        #{actSubPriority,jdbcType=TINYINT},
      </if>
      <if test="actSubStatusId != null">
        #{actSubStatusId,jdbcType=TINYINT},
      </if>
      <if test="actSubMemo != null">
        #{actSubMemo,jdbcType=VARCHAR},
      </if>
      <if test="actSubSplit != null">
        #{actSubSplit,jdbcType=INTEGER},
      </if>
      <if test="actSubMerge != null">
        #{actSubMerge,jdbcType=INTEGER},
      </if>
      <if test="actSubFatherId != null">
        #{actSubFatherId,jdbcType=INTEGER},
      </if>
      <if test="actSubRestartMemo != null">
        #{actSubRestartMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update activity_sub
    <set>
      <if test="actId != null">
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        inst_sub_id = #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="actSubName != null">
        act_sub_name = #{actSubName,jdbcType=VARCHAR},
      </if>
      <if test="actSubShort != null">
        act_sub_short = #{actSubShort,jdbcType=VARCHAR},
      </if>
      <if test="actSubEngName != null">
        act_sub_eng_name = #{actSubEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        Industy_id = #{industyId,jdbcType=TINYINT},
      </if>
      <if test="actSubDateFrom != null">
        act_sub_date_from = #{actSubDateFrom,jdbcType=INTEGER},
      </if>
      <if test="actSubDataTo != null">
        act_sub_data_to = #{actSubDataTo,jdbcType=INTEGER},
      </if>
      <if test="actSubAddress != null">
        act_sub_address = #{actSubAddress,jdbcType=VARCHAR},
      </if>
      <if test="actSubPriority != null">
        act_sub_priority = #{actSubPriority,jdbcType=TINYINT},
      </if>
      <if test="actSubStatusId != null">
        act_sub_status_id = #{actSubStatusId,jdbcType=TINYINT},
      </if>
      <if test="actSubMemo != null">
        act_sub_memo = #{actSubMemo,jdbcType=VARCHAR},
      </if>
      <if test="actSubSplit != null">
        act_sub_split = #{actSubSplit,jdbcType=INTEGER},
      </if>
      <if test="actSubMerge != null">
        act_sub_merge = #{actSubMerge,jdbcType=INTEGER},
      </if>
      <if test="actSubFatherId != null">
        act_sub_father_id = #{actSubFatherId,jdbcType=INTEGER},
      </if>
      <if test="actSubRestartMemo != null">
        act_sub_restart_memo = #{actSubRestartMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where act_sub_id = #{actSubId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update activity_sub
    set act_id = #{actId,jdbcType=INTEGER},
      inst_id = #{instId,jdbcType=INTEGER},
      inst_sub_id = #{instSubId,jdbcType=INTEGER},
      act_sub_name = #{actSubName,jdbcType=VARCHAR},
      act_sub_short = #{actSubShort,jdbcType=VARCHAR},
      act_sub_eng_name = #{actSubEngName,jdbcType=VARCHAR},
      Industy_id = #{industyId,jdbcType=TINYINT},
      act_sub_date_from = #{actSubDateFrom,jdbcType=INTEGER},
      act_sub_data_to = #{actSubDataTo,jdbcType=INTEGER},
      act_sub_address = #{actSubAddress,jdbcType=VARCHAR},
      act_sub_priority = #{actSubPriority,jdbcType=TINYINT},
      act_sub_status_id = #{actSubStatusId,jdbcType=TINYINT},
      act_sub_memo = #{actSubMemo,jdbcType=VARCHAR},
      act_sub_split = #{actSubSplit,jdbcType=INTEGER},
      act_sub_merge = #{actSubMerge,jdbcType=INTEGER},
      act_sub_father_id = #{actSubFatherId,jdbcType=INTEGER},
      act_sub_restart_memo = #{actSubRestartMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where act_sub_id = #{actSubId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="prof_id" jdbcType="INTEGER" property="profId" />
    <result column="prof_rank_name" jdbcType="VARCHAR" property="profRankName" />
    <result column="prof_rank_grade" jdbcType="VARCHAR" property="profRankGrade" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    prof_id, prof_rank_name, prof_rank_grade, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from professional_rank
    where prof_id = #{profId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from professional_rank
    where prof_id = #{profId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into professional_rank (prof_id, prof_rank_name, prof_rank_grade, 
      stop)
    values (#{profId,jdbcType=INTEGER}, #{profRankName,jdbcType=VARCHAR}, #{profRankGrade,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into professional_rank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="profId != null">
        prof_id,
      </if>
      <if test="profRankName != null">
        prof_rank_name,
      </if>
      <if test="profRankGrade != null">
        prof_rank_grade,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="profId != null">
        #{profId,jdbcType=INTEGER},
      </if>
      <if test="profRankName != null">
        #{profRankName,jdbcType=VARCHAR},
      </if>
      <if test="profRankGrade != null">
        #{profRankGrade,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update professional_rank
    <set>
      <if test="profRankName != null">
        prof_rank_name = #{profRankName,jdbcType=VARCHAR},
      </if>
      <if test="profRankGrade != null">
        prof_rank_grade = #{profRankGrade,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where prof_id = #{profId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update professional_rank
    set prof_rank_name = #{profRankName,jdbcType=VARCHAR},
      prof_rank_grade = #{profRankGrade,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where prof_id = #{profId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_title_id" jdbcType="INTEGER" property="personTitleId" />
    <result column="person_title_name" jdbcType="VARCHAR" property="personTitleName" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    person_title_id, person_title_name, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_title
    where person_title_id = #{personTitleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_title
    where person_title_id = #{personTitleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_title (person_title_id, person_title_name, stop
      )
    values (#{personTitleId,jdbcType=INTEGER}, #{personTitleName,jdbcType=VARCHAR}, #{stop,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_title
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personTitleId != null">
        person_title_id,
      </if>
      <if test="personTitleName != null">
        person_title_name,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personTitleId != null">
        #{personTitleId,jdbcType=INTEGER},
      </if>
      <if test="personTitleName != null">
        #{personTitleName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_title
    <set>
      <if test="personTitleName != null">
        person_title_name = #{personTitleName,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where person_title_id = #{personTitleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_title
    set person_title_name = #{personTitleName,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where person_title_id = #{personTitleId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="partisan" jdbcType="VARCHAR" property="partisan" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phone1" jdbcType="VARCHAR" property="phone1" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="others" jdbcType="VARCHAR" property="others" />
    <result column="person_public_duty" jdbcType="VARCHAR" property="personPublicDuty" />
    <result column="person_awards" jdbcType="VARCHAR" property="personAwards" />
    <result column="education_id" jdbcType="INTEGER" property="educationId" />
    <result column="person_member_id" jdbcType="INTEGER" property="personMemberId" />
    <result column="person_member_date" jdbcType="INTEGER" property="personMemberDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    person_id, inst_id, name, sex, birthday, ethnic, partisan, mail, phone1, phone2, 
    qq, wechat, others, person_public_duty, person_awards, education_id, person_member_id, 
    person_member_date, memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member (person_id, inst_id, name, 
      sex, birthday, ethnic, 
      partisan, mail, phone1, 
      phone2, qq, wechat, 
      others, person_public_duty, person_awards, 
      education_id, person_member_id, person_member_date, 
      memo, stop)
    values (#{personId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=INTEGER}, #{ethnic,jdbcType=VARCHAR}, 
      #{partisan,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, 
      #{phone2,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{others,jdbcType=VARCHAR}, #{personPublicDuty,jdbcType=VARCHAR}, #{personAwards,jdbcType=VARCHAR}, 
      #{educationId,jdbcType=INTEGER}, #{personMemberId,jdbcType=INTEGER}, #{personMemberDate,jdbcType=INTEGER}, 
      #{memo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        person_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ethnic != null">
        ethnic,
      </if>
      <if test="partisan != null">
        partisan,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="phone1 != null">
        phone1,
      </if>
      <if test="phone2 != null">
        phone2,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="others != null">
        others,
      </if>
      <if test="personPublicDuty != null">
        person_public_duty,
      </if>
      <if test="personAwards != null">
        person_awards,
      </if>
      <if test="educationId != null">
        education_id,
      </if>
      <if test="personMemberId != null">
        person_member_id,
      </if>
      <if test="personMemberDate != null">
        person_member_date,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        ethnic = #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        partisan = #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        others = #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        person_awards = #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        education_id = #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        person_member_id = #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        person_member_date = #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    set inst_id = #{instId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      ethnic = #{ethnic,jdbcType=VARCHAR},
      partisan = #{partisan,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR},
      person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      person_awards = #{personAwards,jdbcType=VARCHAR},
      education_id = #{educationId,jdbcType=INTEGER},
      person_member_id = #{personMemberId,jdbcType=INTEGER},
      person_member_date = #{personMemberDate,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_period_id" jdbcType="INTEGER" property="instPeriodId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_period_no" jdbcType="TINYINT" property="instPeriodNo" />
    <result column="inst_period_from" jdbcType="INTEGER" property="instPeriodFrom" />
    <result column="inst_period_to" jdbcType="INTEGER" property="instPeriodTo" />
    <result column="inst_memo" jdbcType="VARCHAR" property="instMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_period_id, inst_id, inst_period_no, inst_period_from, inst_period_to, inst_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_period
    where inst_period_id = #{instPeriodId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_period
    where inst_period_id = #{instPeriodId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period (inst_period_id, inst_id, inst_period_no, 
      inst_period_from, inst_period_to, inst_memo
      )
    values (#{instPeriodId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{instPeriodNo,jdbcType=TINYINT}, 
      #{instPeriodFrom,jdbcType=INTEGER}, #{instPeriodTo,jdbcType=INTEGER}, #{instMemo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instPeriodId != null">
        inst_period_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instPeriodNo != null">
        inst_period_no,
      </if>
      <if test="instPeriodFrom != null">
        inst_period_from,
      </if>
      <if test="instPeriodTo != null">
        inst_period_to,
      </if>
      <if test="instMemo != null">
        inst_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instPeriodId != null">
        #{instPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodNo != null">
        #{instPeriodNo,jdbcType=TINYINT},
      </if>
      <if test="instPeriodFrom != null">
        #{instPeriodFrom,jdbcType=INTEGER},
      </if>
      <if test="instPeriodTo != null">
        #{instPeriodTo,jdbcType=INTEGER},
      </if>
      <if test="instMemo != null">
        #{instMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodNo != null">
        inst_period_no = #{instPeriodNo,jdbcType=TINYINT},
      </if>
      <if test="instPeriodFrom != null">
        inst_period_from = #{instPeriodFrom,jdbcType=INTEGER},
      </if>
      <if test="instPeriodTo != null">
        inst_period_to = #{instPeriodTo,jdbcType=INTEGER},
      </if>
      <if test="instMemo != null">
        inst_memo = #{instMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_period_id = #{instPeriodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period
    set inst_id = #{instId,jdbcType=INTEGER},
      inst_period_no = #{instPeriodNo,jdbcType=TINYINT},
      inst_period_from = #{instPeriodFrom,jdbcType=INTEGER},
      inst_period_to = #{instPeriodTo,jdbcType=INTEGER},
      inst_memo = #{instMemo,jdbcType=VARCHAR}
    where inst_period_id = #{instPeriodId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_sub_period_comp_id" jdbcType="INTEGER" property="instSubPeriodCompId" />
    <result column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="inst_sub_period_id" jdbcType="INTEGER" property="instSubPeriodId" />
    <result column="inst_sub_period_comp_order" jdbcType="TINYINT" property="instSubPeriodCompOrder" />
    <result column="comp_id" jdbcType="INTEGER" property="compId" />
    <result column="comp_title_id" jdbcType="INTEGER" property="compTitleId" />
    <result column="inst_sub_period_comp_memo" jdbcType="VARCHAR" property="instSubPeriodCompMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_sub_period_comp_id, inst_sub_id, inst_sub_period_id, inst_sub_period_comp_order, 
    comp_id, comp_title_id, inst_sub_period_comp_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_sub_period_comp
    where inst_sub_period_comp_id = #{instSubPeriodCompId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_sub_period_comp
    where inst_sub_period_comp_id = #{instSubPeriodCompId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period_comp (inst_sub_period_comp_id, inst_sub_id, inst_sub_period_id, 
      inst_sub_period_comp_order, comp_id, comp_title_id, 
      inst_sub_period_comp_memo)
    values (#{instSubPeriodCompId,jdbcType=INTEGER}, #{instSubId,jdbcType=INTEGER}, #{instSubPeriodId,jdbcType=INTEGER}, 
      #{instSubPeriodCompOrder,jdbcType=TINYINT}, #{compId,jdbcType=INTEGER}, #{compTitleId,jdbcType=INTEGER}, 
      #{instSubPeriodCompMemo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period_comp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodCompId != null">
        inst_sub_period_comp_id,
      </if>
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="instSubPeriodId != null">
        inst_sub_period_id,
      </if>
      <if test="instSubPeriodCompOrder != null">
        inst_sub_period_comp_order,
      </if>
      <if test="compId != null">
        comp_id,
      </if>
      <if test="compTitleId != null">
        comp_title_id,
      </if>
      <if test="instSubPeriodCompMemo != null">
        inst_sub_period_comp_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodCompId != null">
        #{instSubPeriodCompId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodId != null">
        #{instSubPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodCompOrder != null">
        #{instSubPeriodCompOrder,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="compTitleId != null">
        #{compTitleId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodCompMemo != null">
        #{instSubPeriodCompMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period_comp
    <set>
      <if test="instSubId != null">
        inst_sub_id = #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodId != null">
        inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodCompOrder != null">
        inst_sub_period_comp_order = #{instSubPeriodCompOrder,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        comp_id = #{compId,jdbcType=INTEGER},
      </if>
      <if test="compTitleId != null">
        comp_title_id = #{compTitleId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodCompMemo != null">
        inst_sub_period_comp_memo = #{instSubPeriodCompMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_sub_period_comp_id = #{instSubPeriodCompId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period_comp
    set inst_sub_id = #{instSubId,jdbcType=INTEGER},
      inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER},
      inst_sub_period_comp_order = #{instSubPeriodCompOrder,jdbcType=TINYINT},
      comp_id = #{compId,jdbcType=INTEGER},
      comp_title_id = #{compTitleId,jdbcType=INTEGER},
      inst_sub_period_comp_memo = #{instSubPeriodCompMemo,jdbcType=VARCHAR}
    where inst_sub_period_comp_id = #{instSubPeriodCompId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="industry_id" jdbcType="INTEGER" property="industryId" />
    <result column="indus_name" jdbcType="VARCHAR" property="indusName" />
    <result column="indus_short" jdbcType="VARCHAR" property="indusShort" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    industry_id, indus_name, indus_short, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from industry
    where industry_id = #{industryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from industry
    where industry_id = #{industryId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into industry (industry_id, indus_name, indus_short, 
      stop)
    values (#{industryId,jdbcType=INTEGER}, #{indusName,jdbcType=VARCHAR}, #{indusShort,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into industry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="industryId != null">
        industry_id,
      </if>
      <if test="indusName != null">
        indus_name,
      </if>
      <if test="indusShort != null">
        indus_short,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="industryId != null">
        #{industryId,jdbcType=INTEGER},
      </if>
      <if test="indusName != null">
        #{indusName,jdbcType=VARCHAR},
      </if>
      <if test="indusShort != null">
        #{indusShort,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update industry
    <set>
      <if test="indusName != null">
        indus_name = #{indusName,jdbcType=VARCHAR},
      </if>
      <if test="indusShort != null">
        indus_short = #{indusShort,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where industry_id = #{industryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update industry
    set indus_name = #{indusName,jdbcType=VARCHAR},
      indus_short = #{indusShort,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where industry_id = #{industryId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_name" jdbcType="VARCHAR" property="instName" />
    <result column="inst_short" jdbcType="VARCHAR" property="instShort" />
    <result column="inst_eng_name" jdbcType="VARCHAR" property="instEngName" />
    <result column="industy_id" jdbcType="TINYINT" property="industyId" />
    <result column="inst_address" jdbcType="VARCHAR" property="instAddress" />
    <result column="inst_website" jdbcType="VARCHAR" property="instWebsite" />
    <result column="inst_wechat" jdbcType="VARCHAR" property="instWechat" />
    <result column="inst_qq" jdbcType="VARCHAR" property="instQq" />
    <result column="inst_others" jdbcType="VARCHAR" property="instOthers" />
    <result column="inst_register_date" jdbcType="INTEGER" property="instRegisterDate" />
    <result column="inst_introduction" jdbcType="VARCHAR" property="instIntroduction" />
    <result column="inst_memo" jdbcType="VARCHAR" property="instMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_id, inst_name, inst_short, inst_eng_name, industy_id, inst_address, inst_website, 
    inst_wechat, inst_qq, inst_others, inst_register_date, inst_introduction, inst_memo, 
    stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from institute
    where inst_id = #{instId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from institute
    where inst_id = #{instId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into institute (inst_id, inst_name, inst_short, 
      inst_eng_name, industy_id, inst_address, 
      inst_website, inst_wechat, inst_qq, 
      inst_others, inst_register_date, inst_introduction, 
      inst_memo, stop)
    values (#{instId,jdbcType=INTEGER}, #{instName,jdbcType=VARCHAR}, #{instShort,jdbcType=VARCHAR}, 
      #{instEngName,jdbcType=VARCHAR}, #{industyId,jdbcType=TINYINT}, #{instAddress,jdbcType=VARCHAR}, 
      #{instWebsite,jdbcType=VARCHAR}, #{instWechat,jdbcType=VARCHAR}, #{instQq,jdbcType=VARCHAR}, 
      #{instOthers,jdbcType=VARCHAR}, #{instRegisterDate,jdbcType=INTEGER}, #{instIntroduction,jdbcType=VARCHAR}, 
      #{instMemo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into institute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instName != null">
        inst_name,
      </if>
      <if test="instShort != null">
        inst_short,
      </if>
      <if test="instEngName != null">
        inst_eng_name,
      </if>
      <if test="industyId != null">
        industy_id,
      </if>
      <if test="instAddress != null">
        inst_address,
      </if>
      <if test="instWebsite != null">
        inst_website,
      </if>
      <if test="instWechat != null">
        inst_wechat,
      </if>
      <if test="instQq != null">
        inst_qq,
      </if>
      <if test="instOthers != null">
        inst_others,
      </if>
      <if test="instRegisterDate != null">
        inst_register_date,
      </if>
      <if test="instIntroduction != null">
        inst_introduction,
      </if>
      <if test="instMemo != null">
        inst_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instName != null">
        #{instName,jdbcType=VARCHAR},
      </if>
      <if test="instShort != null">
        #{instShort,jdbcType=VARCHAR},
      </if>
      <if test="instEngName != null">
        #{instEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        #{industyId,jdbcType=TINYINT},
      </if>
      <if test="instAddress != null">
        #{instAddress,jdbcType=VARCHAR},
      </if>
      <if test="instWebsite != null">
        #{instWebsite,jdbcType=VARCHAR},
      </if>
      <if test="instWechat != null">
        #{instWechat,jdbcType=VARCHAR},
      </if>
      <if test="instQq != null">
        #{instQq,jdbcType=VARCHAR},
      </if>
      <if test="instOthers != null">
        #{instOthers,jdbcType=VARCHAR},
      </if>
      <if test="instRegisterDate != null">
        #{instRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="instIntroduction != null">
        #{instIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="instMemo != null">
        #{instMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update institute
    <set>
      <if test="instName != null">
        inst_name = #{instName,jdbcType=VARCHAR},
      </if>
      <if test="instShort != null">
        inst_short = #{instShort,jdbcType=VARCHAR},
      </if>
      <if test="instEngName != null">
        inst_eng_name = #{instEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        industy_id = #{industyId,jdbcType=TINYINT},
      </if>
      <if test="instAddress != null">
        inst_address = #{instAddress,jdbcType=VARCHAR},
      </if>
      <if test="instWebsite != null">
        inst_website = #{instWebsite,jdbcType=VARCHAR},
      </if>
      <if test="instWechat != null">
        inst_wechat = #{instWechat,jdbcType=VARCHAR},
      </if>
      <if test="instQq != null">
        inst_qq = #{instQq,jdbcType=VARCHAR},
      </if>
      <if test="instOthers != null">
        inst_others = #{instOthers,jdbcType=VARCHAR},
      </if>
      <if test="instRegisterDate != null">
        inst_register_date = #{instRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="instIntroduction != null">
        inst_introduction = #{instIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="instMemo != null">
        inst_memo = #{instMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where inst_id = #{instId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update institute
    set inst_name = #{instName,jdbcType=VARCHAR},
      inst_short = #{instShort,jdbcType=VARCHAR},
      inst_eng_name = #{instEngName,jdbcType=VARCHAR},
      industy_id = #{industyId,jdbcType=TINYINT},
      inst_address = #{instAddress,jdbcType=VARCHAR},
      inst_website = #{instWebsite,jdbcType=VARCHAR},
      inst_wechat = #{instWechat,jdbcType=VARCHAR},
      inst_qq = #{instQq,jdbcType=VARCHAR},
      inst_others = #{instOthers,jdbcType=VARCHAR},
      inst_register_date = #{instRegisterDate,jdbcType=INTEGER},
      inst_introduction = #{instIntroduction,jdbcType=VARCHAR},
      inst_memo = #{instMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where inst_id = #{instId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="union_inst_id" jdbcType="INTEGER" property="unionInstId" />
    <result column="union_id" jdbcType="INTEGER" property="unionId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    union_inst_id, union_id, inst_id, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from union_inst_mapper
    where union_inst_id = #{unionInstId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from union_inst_mapper
    where union_inst_id = #{unionInstId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into union_inst_mapper (union_inst_id, union_id, inst_id, 
      stop)
    values (#{unionInstId,jdbcType=INTEGER}, #{unionId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into union_inst_mapper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unionInstId != null">
        union_inst_id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unionInstId != null">
        #{unionInstId,jdbcType=INTEGER},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update union_inst_mapper
    <set>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where union_inst_id = #{unionInstId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update union_inst_mapper
    set union_id = #{unionId,jdbcType=INTEGER},
      inst_id = #{instId,jdbcType=INTEGER},
      stop = #{stop,jdbcType=BIT}
    where union_inst_id = #{unionInstId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="inst_sub_name" jdbcType="VARCHAR" property="instSubName" />
    <result column="inst_sub_short" jdbcType="VARCHAR" property="instSubShort" />
    <result column="inst_sub_eng_name" jdbcType="VARCHAR" property="instSubEngName" />
    <result column="industy_id" jdbcType="TINYINT" property="industyId" />
    <result column="inst_sub_address" jdbcType="VARCHAR" property="instSubAddress" />
    <result column="inst_sub_website" jdbcType="VARCHAR" property="instSubWebsite" />
    <result column="inst_sub_wechat" jdbcType="VARCHAR" property="instSubWechat" />
    <result column="inst_sub_qq" jdbcType="VARCHAR" property="instSubQq" />
    <result column="inst_sub_others" jdbcType="VARCHAR" property="instSubOthers" />
    <result column="inst_sub_register_date" jdbcType="INTEGER" property="instSubRegisterDate" />
    <result column="inst_sub_introduction" jdbcType="VARCHAR" property="instSubIntroduction" />
    <result column="inst_sub_memo" jdbcType="VARCHAR" property="instSubMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_sub_id, inst_sub_name, inst_sub_short, inst_sub_eng_name, industy_id, inst_sub_address, 
    inst_sub_website, inst_sub_wechat, inst_sub_qq, inst_sub_others, inst_sub_register_date, 
    inst_sub_introduction, inst_sub_memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from institute_sub
    where inst_sub_id = #{instSubId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from institute_sub
    where inst_sub_id = #{instSubId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into institute_sub (inst_sub_id, inst_sub_name, inst_sub_short, 
      inst_sub_eng_name, industy_id, inst_sub_address, 
      inst_sub_website, inst_sub_wechat, inst_sub_qq, 
      inst_sub_others, inst_sub_register_date, inst_sub_introduction, 
      inst_sub_memo, stop)
    values (#{instSubId,jdbcType=INTEGER}, #{instSubName,jdbcType=VARCHAR}, #{instSubShort,jdbcType=VARCHAR}, 
      #{instSubEngName,jdbcType=VARCHAR}, #{industyId,jdbcType=TINYINT}, #{instSubAddress,jdbcType=VARCHAR}, 
      #{instSubWebsite,jdbcType=VARCHAR}, #{instSubWechat,jdbcType=VARCHAR}, #{instSubQq,jdbcType=VARCHAR}, 
      #{instSubOthers,jdbcType=VARCHAR}, #{instSubRegisterDate,jdbcType=INTEGER}, #{instSubIntroduction,jdbcType=VARCHAR}, 
      #{instSubMemo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into institute_sub
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="instSubName != null">
        inst_sub_name,
      </if>
      <if test="instSubShort != null">
        inst_sub_short,
      </if>
      <if test="instSubEngName != null">
        inst_sub_eng_name,
      </if>
      <if test="industyId != null">
        industy_id,
      </if>
      <if test="instSubAddress != null">
        inst_sub_address,
      </if>
      <if test="instSubWebsite != null">
        inst_sub_website,
      </if>
      <if test="instSubWechat != null">
        inst_sub_wechat,
      </if>
      <if test="instSubQq != null">
        inst_sub_qq,
      </if>
      <if test="instSubOthers != null">
        inst_sub_others,
      </if>
      <if test="instSubRegisterDate != null">
        inst_sub_register_date,
      </if>
      <if test="instSubIntroduction != null">
        inst_sub_introduction,
      </if>
      <if test="instSubMemo != null">
        inst_sub_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubName != null">
        #{instSubName,jdbcType=VARCHAR},
      </if>
      <if test="instSubShort != null">
        #{instSubShort,jdbcType=VARCHAR},
      </if>
      <if test="instSubEngName != null">
        #{instSubEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        #{industyId,jdbcType=TINYINT},
      </if>
      <if test="instSubAddress != null">
        #{instSubAddress,jdbcType=VARCHAR},
      </if>
      <if test="instSubWebsite != null">
        #{instSubWebsite,jdbcType=VARCHAR},
      </if>
      <if test="instSubWechat != null">
        #{instSubWechat,jdbcType=VARCHAR},
      </if>
      <if test="instSubQq != null">
        #{instSubQq,jdbcType=VARCHAR},
      </if>
      <if test="instSubOthers != null">
        #{instSubOthers,jdbcType=VARCHAR},
      </if>
      <if test="instSubRegisterDate != null">
        #{instSubRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="instSubIntroduction != null">
        #{instSubIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="instSubMemo != null">
        #{instSubMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update institute_sub
    <set>
      <if test="instSubName != null">
        inst_sub_name = #{instSubName,jdbcType=VARCHAR},
      </if>
      <if test="instSubShort != null">
        inst_sub_short = #{instSubShort,jdbcType=VARCHAR},
      </if>
      <if test="instSubEngName != null">
        inst_sub_eng_name = #{instSubEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        industy_id = #{industyId,jdbcType=TINYINT},
      </if>
      <if test="instSubAddress != null">
        inst_sub_address = #{instSubAddress,jdbcType=VARCHAR},
      </if>
      <if test="instSubWebsite != null">
        inst_sub_website = #{instSubWebsite,jdbcType=VARCHAR},
      </if>
      <if test="instSubWechat != null">
        inst_sub_wechat = #{instSubWechat,jdbcType=VARCHAR},
      </if>
      <if test="instSubQq != null">
        inst_sub_qq = #{instSubQq,jdbcType=VARCHAR},
      </if>
      <if test="instSubOthers != null">
        inst_sub_others = #{instSubOthers,jdbcType=VARCHAR},
      </if>
      <if test="instSubRegisterDate != null">
        inst_sub_register_date = #{instSubRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="instSubIntroduction != null">
        inst_sub_introduction = #{instSubIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="instSubMemo != null">
        inst_sub_memo = #{instSubMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where inst_sub_id = #{instSubId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update institute_sub
    set inst_sub_name = #{instSubName,jdbcType=VARCHAR},
      inst_sub_short = #{instSubShort,jdbcType=VARCHAR},
      inst_sub_eng_name = #{instSubEngName,jdbcType=VARCHAR},
      industy_id = #{industyId,jdbcType=TINYINT},
      inst_sub_address = #{instSubAddress,jdbcType=VARCHAR},
      inst_sub_website = #{instSubWebsite,jdbcType=VARCHAR},
      inst_sub_wechat = #{instSubWechat,jdbcType=VARCHAR},
      inst_sub_qq = #{instSubQq,jdbcType=VARCHAR},
      inst_sub_others = #{instSubOthers,jdbcType=VARCHAR},
      inst_sub_register_date = #{instSubRegisterDate,jdbcType=INTEGER},
      inst_sub_introduction = #{instSubIntroduction,jdbcType=VARCHAR},
      inst_sub_memo = #{instSubMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where inst_sub_id = #{instSubId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="comp_id" jdbcType="INTEGER" property="compId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="comp_name" jdbcType="VARCHAR" property="compName" />
    <result column="comp_short" jdbcType="VARCHAR" property="compShort" />
    <result column="comp_eng_name" jdbcType="VARCHAR" property="compEngName" />
    <result column="comp_prop_id" jdbcType="TINYINT" property="compPropId" />
    <result column="comp_address" jdbcType="VARCHAR" property="compAddress" />
    <result column="comp_website" jdbcType="VARCHAR" property="compWebsite" />
    <result column="comp_register_date" jdbcType="INTEGER" property="compRegisterDate" />
    <result column="comp_register_capital" jdbcType="INTEGER" property="compRegisterCapital" />
    <result column="comp_legal_name" jdbcType="VARCHAR" property="compLegalName" />
    <result column="comp_legal_inform" jdbcType="VARCHAR" property="compLegalInform" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="comp_employee_count" jdbcType="INTEGER" property="compEmployeeCount" />
    <result column="comp_employee_college_rate" jdbcType="DOUBLE" property="compEmployeeCollegeRate" />
    <result column="comp_employee_it_count" jdbcType="INTEGER" property="compEmployeeItCount" />
    <result column="comp_employee_it_rate" jdbcType="DOUBLE" property="compEmployeeItRate" />
    <result column="comp_business" jdbcType="VARCHAR" property="compBusiness" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="comp_member_id" jdbcType="INTEGER" property="compMemberId" />
    <result column="comp_member_date" jdbcType="INTEGER" property="compMemberDate" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    comp_id, inst_id, comp_name, comp_short, comp_eng_name, comp_prop_id, comp_address, 
    comp_website, comp_register_date, comp_register_capital, comp_legal_name, comp_legal_inform, 
    person_id, comp_employee_count, comp_employee_college_rate, comp_employee_it_count, 
    comp_employee_it_rate, comp_business, memo, comp_member_id, comp_member_date, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_member
    where comp_id = #{compId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company_member
    where comp_id = #{compId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into company_member (comp_id, inst_id, comp_name, 
      comp_short, comp_eng_name, comp_prop_id, 
      comp_address, comp_website, comp_register_date, 
      comp_register_capital, comp_legal_name, comp_legal_inform, 
      person_id, comp_employee_count, comp_employee_college_rate, 
      comp_employee_it_count, comp_employee_it_rate, 
      comp_business, memo, comp_member_id, 
      comp_member_date, stop)
    values (#{compId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{compName,jdbcType=VARCHAR}, 
      #{compShort,jdbcType=VARCHAR}, #{compEngName,jdbcType=VARCHAR}, #{compPropId,jdbcType=TINYINT}, 
      #{compAddress,jdbcType=VARCHAR}, #{compWebsite,jdbcType=VARCHAR}, #{compRegisterDate,jdbcType=INTEGER}, 
      #{compRegisterCapital,jdbcType=INTEGER}, #{compLegalName,jdbcType=VARCHAR}, #{compLegalInform,jdbcType=VARCHAR}, 
      #{personId,jdbcType=INTEGER}, #{compEmployeeCount,jdbcType=INTEGER}, #{compEmployeeCollegeRate,jdbcType=DOUBLE}, 
      #{compEmployeeItCount,jdbcType=INTEGER}, #{compEmployeeItRate,jdbcType=DOUBLE}, 
      #{compBusiness,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{compMemberId,jdbcType=INTEGER}, 
      #{compMemberDate,jdbcType=INTEGER}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into company_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        comp_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="compName != null">
        comp_name,
      </if>
      <if test="compShort != null">
        comp_short,
      </if>
      <if test="compEngName != null">
        comp_eng_name,
      </if>
      <if test="compPropId != null">
        comp_prop_id,
      </if>
      <if test="compAddress != null">
        comp_address,
      </if>
      <if test="compWebsite != null">
        comp_website,
      </if>
      <if test="compRegisterDate != null">
        comp_register_date,
      </if>
      <if test="compRegisterCapital != null">
        comp_register_capital,
      </if>
      <if test="compLegalName != null">
        comp_legal_name,
      </if>
      <if test="compLegalInform != null">
        comp_legal_inform,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="compEmployeeCount != null">
        comp_employee_count,
      </if>
      <if test="compEmployeeCollegeRate != null">
        comp_employee_college_rate,
      </if>
      <if test="compEmployeeItCount != null">
        comp_employee_it_count,
      </if>
      <if test="compEmployeeItRate != null">
        comp_employee_it_rate,
      </if>
      <if test="compBusiness != null">
        comp_business,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="compMemberId != null">
        comp_member_id,
      </if>
      <if test="compMemberDate != null">
        comp_member_date,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="compName != null">
        #{compName,jdbcType=VARCHAR},
      </if>
      <if test="compShort != null">
        #{compShort,jdbcType=VARCHAR},
      </if>
      <if test="compEngName != null">
        #{compEngName,jdbcType=VARCHAR},
      </if>
      <if test="compPropId != null">
        #{compPropId,jdbcType=TINYINT},
      </if>
      <if test="compAddress != null">
        #{compAddress,jdbcType=VARCHAR},
      </if>
      <if test="compWebsite != null">
        #{compWebsite,jdbcType=VARCHAR},
      </if>
      <if test="compRegisterDate != null">
        #{compRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="compRegisterCapital != null">
        #{compRegisterCapital,jdbcType=INTEGER},
      </if>
      <if test="compLegalName != null">
        #{compLegalName,jdbcType=VARCHAR},
      </if>
      <if test="compLegalInform != null">
        #{compLegalInform,jdbcType=VARCHAR},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeCount != null">
        #{compEmployeeCount,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeCollegeRate != null">
        #{compEmployeeCollegeRate,jdbcType=DOUBLE},
      </if>
      <if test="compEmployeeItCount != null">
        #{compEmployeeItCount,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeItRate != null">
        #{compEmployeeItRate,jdbcType=DOUBLE},
      </if>
      <if test="compBusiness != null">
        #{compBusiness,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="compMemberId != null">
        #{compMemberId,jdbcType=INTEGER},
      </if>
      <if test="compMemberDate != null">
        #{compMemberDate,jdbcType=INTEGER},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update company_member
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="compName != null">
        comp_name = #{compName,jdbcType=VARCHAR},
      </if>
      <if test="compShort != null">
        comp_short = #{compShort,jdbcType=VARCHAR},
      </if>
      <if test="compEngName != null">
        comp_eng_name = #{compEngName,jdbcType=VARCHAR},
      </if>
      <if test="compPropId != null">
        comp_prop_id = #{compPropId,jdbcType=TINYINT},
      </if>
      <if test="compAddress != null">
        comp_address = #{compAddress,jdbcType=VARCHAR},
      </if>
      <if test="compWebsite != null">
        comp_website = #{compWebsite,jdbcType=VARCHAR},
      </if>
      <if test="compRegisterDate != null">
        comp_register_date = #{compRegisterDate,jdbcType=INTEGER},
      </if>
      <if test="compRegisterCapital != null">
        comp_register_capital = #{compRegisterCapital,jdbcType=INTEGER},
      </if>
      <if test="compLegalName != null">
        comp_legal_name = #{compLegalName,jdbcType=VARCHAR},
      </if>
      <if test="compLegalInform != null">
        comp_legal_inform = #{compLegalInform,jdbcType=VARCHAR},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeCount != null">
        comp_employee_count = #{compEmployeeCount,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeCollegeRate != null">
        comp_employee_college_rate = #{compEmployeeCollegeRate,jdbcType=DOUBLE},
      </if>
      <if test="compEmployeeItCount != null">
        comp_employee_it_count = #{compEmployeeItCount,jdbcType=INTEGER},
      </if>
      <if test="compEmployeeItRate != null">
        comp_employee_it_rate = #{compEmployeeItRate,jdbcType=DOUBLE},
      </if>
      <if test="compBusiness != null">
        comp_business = #{compBusiness,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="compMemberId != null">
        comp_member_id = #{compMemberId,jdbcType=INTEGER},
      </if>
      <if test="compMemberDate != null">
        comp_member_date = #{compMemberDate,jdbcType=INTEGER},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where comp_id = #{compId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update company_member
    set inst_id = #{instId,jdbcType=INTEGER},
      comp_name = #{compName,jdbcType=VARCHAR},
      comp_short = #{compShort,jdbcType=VARCHAR},
      comp_eng_name = #{compEngName,jdbcType=VARCHAR},
      comp_prop_id = #{compPropId,jdbcType=TINYINT},
      comp_address = #{compAddress,jdbcType=VARCHAR},
      comp_website = #{compWebsite,jdbcType=VARCHAR},
      comp_register_date = #{compRegisterDate,jdbcType=INTEGER},
      comp_register_capital = #{compRegisterCapital,jdbcType=INTEGER},
      comp_legal_name = #{compLegalName,jdbcType=VARCHAR},
      comp_legal_inform = #{compLegalInform,jdbcType=VARCHAR},
      person_id = #{personId,jdbcType=INTEGER},
      comp_employee_count = #{compEmployeeCount,jdbcType=INTEGER},
      comp_employee_college_rate = #{compEmployeeCollegeRate,jdbcType=DOUBLE},
      comp_employee_it_count = #{compEmployeeItCount,jdbcType=INTEGER},
      comp_employee_it_rate = #{compEmployeeItRate,jdbcType=DOUBLE},
      comp_business = #{compBusiness,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      comp_member_id = #{compMemberId,jdbcType=INTEGER},
      comp_member_date = #{compMemberDate,jdbcType=INTEGER},
      stop = #{stop,jdbcType=BIT}
    where comp_id = #{compId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="act_sub_id" jdbcType="INTEGER" property="actSubId" />
    <result column="act_id" jdbcType="INTEGER" property="actId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="task_short" jdbcType="VARCHAR" property="taskShort" />
    <result column="task_eng_name" jdbcType="VARCHAR" property="taskEngName" />
    <result column="task_date_from" jdbcType="INTEGER" property="taskDateFrom" />
    <result column="task_date_to" jdbcType="INTEGER" property="taskDateTo" />
    <result column="task_priority" jdbcType="TINYINT" property="taskPriority" />
    <result column="task_status_id" jdbcType="TINYINT" property="taskStatusId" />
    <result column="task_memo" jdbcType="VARCHAR" property="taskMemo" />
    <result column="task_restart_memo" jdbcType="VARCHAR" property="taskRestartMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    task_id, act_sub_id, act_id, task_name, task_short, task_eng_name, task_date_from, 
    task_date_to, task_priority, task_status_id, task_memo, task_restart_memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into task (task_id, act_sub_id, act_id, 
      task_name, task_short, task_eng_name, 
      task_date_from, task_date_to, task_priority, 
      task_status_id, task_memo, task_restart_memo, 
      stop)
    values (#{taskId,jdbcType=INTEGER}, #{actSubId,jdbcType=INTEGER}, #{actId,jdbcType=INTEGER}, 
      #{taskName,jdbcType=VARCHAR}, #{taskShort,jdbcType=VARCHAR}, #{taskEngName,jdbcType=VARCHAR}, 
      #{taskDateFrom,jdbcType=INTEGER}, #{taskDateTo,jdbcType=INTEGER}, #{taskPriority,jdbcType=TINYINT}, 
      #{taskStatusId,jdbcType=TINYINT}, #{taskMemo,jdbcType=VARCHAR}, #{taskRestartMemo,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="actSubId != null">
        act_sub_id,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskShort != null">
        task_short,
      </if>
      <if test="taskEngName != null">
        task_eng_name,
      </if>
      <if test="taskDateFrom != null">
        task_date_from,
      </if>
      <if test="taskDateTo != null">
        task_date_to,
      </if>
      <if test="taskPriority != null">
        task_priority,
      </if>
      <if test="taskStatusId != null">
        task_status_id,
      </if>
      <if test="taskMemo != null">
        task_memo,
      </if>
      <if test="taskRestartMemo != null">
        task_restart_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="actSubId != null">
        #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskShort != null">
        #{taskShort,jdbcType=VARCHAR},
      </if>
      <if test="taskEngName != null">
        #{taskEngName,jdbcType=VARCHAR},
      </if>
      <if test="taskDateFrom != null">
        #{taskDateFrom,jdbcType=INTEGER},
      </if>
      <if test="taskDateTo != null">
        #{taskDateTo,jdbcType=INTEGER},
      </if>
      <if test="taskPriority != null">
        #{taskPriority,jdbcType=TINYINT},
      </if>
      <if test="taskStatusId != null">
        #{taskStatusId,jdbcType=TINYINT},
      </if>
      <if test="taskMemo != null">
        #{taskMemo,jdbcType=VARCHAR},
      </if>
      <if test="taskRestartMemo != null">
        #{taskRestartMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update task
    <set>
      <if test="actSubId != null">
        act_sub_id = #{actSubId,jdbcType=INTEGER},
      </if>
      <if test="actId != null">
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskShort != null">
        task_short = #{taskShort,jdbcType=VARCHAR},
      </if>
      <if test="taskEngName != null">
        task_eng_name = #{taskEngName,jdbcType=VARCHAR},
      </if>
      <if test="taskDateFrom != null">
        task_date_from = #{taskDateFrom,jdbcType=INTEGER},
      </if>
      <if test="taskDateTo != null">
        task_date_to = #{taskDateTo,jdbcType=INTEGER},
      </if>
      <if test="taskPriority != null">
        task_priority = #{taskPriority,jdbcType=TINYINT},
      </if>
      <if test="taskStatusId != null">
        task_status_id = #{taskStatusId,jdbcType=TINYINT},
      </if>
      <if test="taskMemo != null">
        task_memo = #{taskMemo,jdbcType=VARCHAR},
      </if>
      <if test="taskRestartMemo != null">
        task_restart_memo = #{taskRestartMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update task
    set act_sub_id = #{actSubId,jdbcType=INTEGER},
      act_id = #{actId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_short = #{taskShort,jdbcType=VARCHAR},
      task_eng_name = #{taskEngName,jdbcType=VARCHAR},
      task_date_from = #{taskDateFrom,jdbcType=INTEGER},
      task_date_to = #{taskDateTo,jdbcType=INTEGER},
      task_priority = #{taskPriority,jdbcType=TINYINT},
      task_status_id = #{taskStatusId,jdbcType=TINYINT},
      task_memo = #{taskMemo,jdbcType=VARCHAR},
      task_restart_memo = #{taskRestartMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_period_comp_id" jdbcType="INTEGER" property="instPeriodCompId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_period_id" jdbcType="INTEGER" property="instPeriodId" />
    <result column="inst_period_comp_order" jdbcType="TINYINT" property="instPeriodCompOrder" />
    <result column="comp_id" jdbcType="INTEGER" property="compId" />
    <result column="comp_title_id" jdbcType="INTEGER" property="compTitleId" />
    <result column="inst_period_comp_memo" jdbcType="VARCHAR" property="instPeriodCompMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_period_comp_id, inst_id, inst_period_id, inst_period_comp_order, comp_id, comp_title_id, 
    inst_period_comp_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_period_comp
    where inst_period_comp_id = #{instPeriodCompId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_period_comp
    where inst_period_comp_id = #{instPeriodCompId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period_comp (inst_period_comp_id, inst_id, inst_period_id, 
      inst_period_comp_order, comp_id, comp_title_id, 
      inst_period_comp_memo)
    values (#{instPeriodCompId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{instPeriodId,jdbcType=INTEGER}, 
      #{instPeriodCompOrder,jdbcType=TINYINT}, #{compId,jdbcType=INTEGER}, #{compTitleId,jdbcType=INTEGER}, 
      #{instPeriodCompMemo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_period_comp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instPeriodCompId != null">
        inst_period_comp_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instPeriodId != null">
        inst_period_id,
      </if>
      <if test="instPeriodCompOrder != null">
        inst_period_comp_order,
      </if>
      <if test="compId != null">
        comp_id,
      </if>
      <if test="compTitleId != null">
        comp_title_id,
      </if>
      <if test="instPeriodCompMemo != null">
        inst_period_comp_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instPeriodCompId != null">
        #{instPeriodCompId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodId != null">
        #{instPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodCompOrder != null">
        #{instPeriodCompOrder,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="compTitleId != null">
        #{compTitleId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodCompMemo != null">
        #{instPeriodCompMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period_comp
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodId != null">
        inst_period_id = #{instPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodCompOrder != null">
        inst_period_comp_order = #{instPeriodCompOrder,jdbcType=TINYINT},
      </if>
      <if test="compId != null">
        comp_id = #{compId,jdbcType=INTEGER},
      </if>
      <if test="compTitleId != null">
        comp_title_id = #{compTitleId,jdbcType=INTEGER},
      </if>
      <if test="instPeriodCompMemo != null">
        inst_period_comp_memo = #{instPeriodCompMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_period_comp_id = #{instPeriodCompId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_period_comp
    set inst_id = #{instId,jdbcType=INTEGER},
      inst_period_id = #{instPeriodId,jdbcType=INTEGER},
      inst_period_comp_order = #{instPeriodCompOrder,jdbcType=TINYINT},
      comp_id = #{compId,jdbcType=INTEGER},
      comp_title_id = #{compTitleId,jdbcType=INTEGER},
      inst_period_comp_memo = #{instPeriodCompMemo,jdbcType=VARCHAR}
    where inst_period_comp_id = #{instPeriodCompId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="act_id" jdbcType="INTEGER" property="actId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="act_name" jdbcType="VARCHAR" property="actName" />
    <result column="act_short" jdbcType="VARCHAR" property="actShort" />
    <result column="act_eng_name" jdbcType="VARCHAR" property="actEngName" />
    <result column="industy_id" jdbcType="TINYINT" property="industyId" />
    <result column="act_date" jdbcType="INTEGER" property="actDate" />
    <result column="act_date_from" jdbcType="INTEGER" property="actDateFrom" />
    <result column="act_date_to" jdbcType="INTEGER" property="actDateTo" />
    <result column="act_address" jdbcType="VARCHAR" property="actAddress" />
    <result column="act_priority" jdbcType="TINYINT" property="actPriority" />
    <result column="act_status_id" jdbcType="TINYINT" property="actStatusId" />
    <result column="act_memo" jdbcType="VARCHAR" property="actMemo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    act_id, inst_id, inst_sub_id, person_id, act_name, act_short, act_eng_name, industy_id, 
    act_date, act_date_from, act_date_to, act_address, act_priority, act_status_id, act_memo, 
    stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity
    where act_id = #{actId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity
    where act_id = #{actId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into activity (act_id, inst_id, inst_sub_id, 
      person_id, act_name, act_short, 
      act_eng_name, industy_id, act_date, 
      act_date_from, act_date_to, act_address, 
      act_priority, act_status_id, act_memo, 
      stop)
    values (#{actId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{instSubId,jdbcType=INTEGER}, 
      #{personId,jdbcType=INTEGER}, #{actName,jdbcType=VARCHAR}, #{actShort,jdbcType=VARCHAR}, 
      #{actEngName,jdbcType=VARCHAR}, #{industyId,jdbcType=TINYINT}, #{actDate,jdbcType=INTEGER}, 
      #{actDateFrom,jdbcType=INTEGER}, #{actDateTo,jdbcType=INTEGER}, #{actAddress,jdbcType=VARCHAR}, 
      #{actPriority,jdbcType=TINYINT}, #{actStatusId,jdbcType=TINYINT}, #{actMemo,jdbcType=VARCHAR}, 
      #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actId != null">
        act_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="actName != null">
        act_name,
      </if>
      <if test="actShort != null">
        act_short,
      </if>
      <if test="actEngName != null">
        act_eng_name,
      </if>
      <if test="industyId != null">
        industy_id,
      </if>
      <if test="actDate != null">
        act_date,
      </if>
      <if test="actDateFrom != null">
        act_date_from,
      </if>
      <if test="actDateTo != null">
        act_date_to,
      </if>
      <if test="actAddress != null">
        act_address,
      </if>
      <if test="actPriority != null">
        act_priority,
      </if>
      <if test="actStatusId != null">
        act_status_id,
      </if>
      <if test="actMemo != null">
        act_memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="actName != null">
        #{actName,jdbcType=VARCHAR},
      </if>
      <if test="actShort != null">
        #{actShort,jdbcType=VARCHAR},
      </if>
      <if test="actEngName != null">
        #{actEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        #{industyId,jdbcType=TINYINT},
      </if>
      <if test="actDate != null">
        #{actDate,jdbcType=INTEGER},
      </if>
      <if test="actDateFrom != null">
        #{actDateFrom,jdbcType=INTEGER},
      </if>
      <if test="actDateTo != null">
        #{actDateTo,jdbcType=INTEGER},
      </if>
      <if test="actAddress != null">
        #{actAddress,jdbcType=VARCHAR},
      </if>
      <if test="actPriority != null">
        #{actPriority,jdbcType=TINYINT},
      </if>
      <if test="actStatusId != null">
        #{actStatusId,jdbcType=TINYINT},
      </if>
      <if test="actMemo != null">
        #{actMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update activity
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        inst_sub_id = #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="actName != null">
        act_name = #{actName,jdbcType=VARCHAR},
      </if>
      <if test="actShort != null">
        act_short = #{actShort,jdbcType=VARCHAR},
      </if>
      <if test="actEngName != null">
        act_eng_name = #{actEngName,jdbcType=VARCHAR},
      </if>
      <if test="industyId != null">
        industy_id = #{industyId,jdbcType=TINYINT},
      </if>
      <if test="actDate != null">
        act_date = #{actDate,jdbcType=INTEGER},
      </if>
      <if test="actDateFrom != null">
        act_date_from = #{actDateFrom,jdbcType=INTEGER},
      </if>
      <if test="actDateTo != null">
        act_date_to = #{actDateTo,jdbcType=INTEGER},
      </if>
      <if test="actAddress != null">
        act_address = #{actAddress,jdbcType=VARCHAR},
      </if>
      <if test="actPriority != null">
        act_priority = #{actPriority,jdbcType=TINYINT},
      </if>
      <if test="actStatusId != null">
        act_status_id = #{actStatusId,jdbcType=TINYINT},
      </if>
      <if test="actMemo != null">
        act_memo = #{actMemo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where act_id = #{actId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update activity
    set inst_id = #{instId,jdbcType=INTEGER},
      inst_sub_id = #{instSubId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      act_name = #{actName,jdbcType=VARCHAR},
      act_short = #{actShort,jdbcType=VARCHAR},
      act_eng_name = #{actEngName,jdbcType=VARCHAR},
      industy_id = #{industyId,jdbcType=TINYINT},
      act_date = #{actDate,jdbcType=INTEGER},
      act_date_from = #{actDateFrom,jdbcType=INTEGER},
      act_date_to = #{actDateTo,jdbcType=INTEGER},
      act_address = #{actAddress,jdbcType=VARCHAR},
      act_priority = #{actPriority,jdbcType=TINYINT},
      act_status_id = #{actStatusId,jdbcType=TINYINT},
      act_memo = #{actMemo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where act_id = #{actId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_sub_period_person_id" jdbcType="INTEGER" property="instSubPeriodPersonId" />
    <result column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="inst_sub_period_id" jdbcType="INTEGER" property="instSubPeriodId" />
    <result column="inst_sub_period_person_order" jdbcType="TINYINT" property="instSubPeriodPersonOrder" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="person_title_id" jdbcType="INTEGER" property="personTitleId" />
    <result column="inst_sub_period_person_memo" jdbcType="VARCHAR" property="instSubPeriodPersonMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_sub_period_person_id, inst_sub_id, inst_sub_period_id, inst_sub_period_person_order, 
    person_id, person_title_id, inst_sub_period_person_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_sub_period_person
    where inst_sub_period_person_id = #{instSubPeriodPersonId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_sub_period_person
    where inst_sub_period_person_id = #{instSubPeriodPersonId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period_person (inst_sub_period_person_id, inst_sub_id, 
      inst_sub_period_id, inst_sub_period_person_order, 
      person_id, person_title_id, inst_sub_period_person_memo
      )
    values (#{instSubPeriodPersonId,jdbcType=INTEGER}, #{instSubId,jdbcType=INTEGER}, 
      #{instSubPeriodId,jdbcType=INTEGER}, #{instSubPeriodPersonOrder,jdbcType=TINYINT}, 
      #{personId,jdbcType=INTEGER}, #{personTitleId,jdbcType=INTEGER}, #{instSubPeriodPersonMemo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodPersonId != null">
        inst_sub_period_person_id,
      </if>
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="instSubPeriodId != null">
        inst_sub_period_id,
      </if>
      <if test="instSubPeriodPersonOrder != null">
        inst_sub_period_person_order,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="personTitleId != null">
        person_title_id,
      </if>
      <if test="instSubPeriodPersonMemo != null">
        inst_sub_period_person_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodPersonId != null">
        #{instSubPeriodPersonId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodId != null">
        #{instSubPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodPersonOrder != null">
        #{instSubPeriodPersonOrder,jdbcType=TINYINT},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="personTitleId != null">
        #{personTitleId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodPersonMemo != null">
        #{instSubPeriodPersonMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period_person
    <set>
      <if test="instSubId != null">
        inst_sub_id = #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodId != null">
        inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodPersonOrder != null">
        inst_sub_period_person_order = #{instSubPeriodPersonOrder,jdbcType=TINYINT},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="personTitleId != null">
        person_title_id = #{personTitleId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodPersonMemo != null">
        inst_sub_period_person_memo = #{instSubPeriodPersonMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_sub_period_person_id = #{instSubPeriodPersonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period_person
    set inst_sub_id = #{instSubId,jdbcType=INTEGER},
      inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER},
      inst_sub_period_person_order = #{instSubPeriodPersonOrder,jdbcType=TINYINT},
      person_id = #{personId,jdbcType=INTEGER},
      person_title_id = #{personTitleId,jdbcType=INTEGER},
      inst_sub_period_person_memo = #{instSubPeriodPersonMemo,jdbcType=VARCHAR}
    where inst_sub_period_person_id = #{instSubPeriodPersonId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="inst_sub_period_id" jdbcType="INTEGER" property="instSubPeriodId" />
    <result column="inst_sub_id" jdbcType="INTEGER" property="instSubId" />
    <result column="inst_sub_period_no" jdbcType="TINYINT" property="instSubPeriodNo" />
    <result column="inst_sub_period_from" jdbcType="INTEGER" property="instSubPeriodFrom" />
    <result column="inst_sub_period_to" jdbcType="INTEGER" property="instSubPeriodTo" />
    <result column="inst_sub_memo" jdbcType="VARCHAR" property="instSubMemo" />
  </resultMap>
  <sql id="Base_Column_List">
    inst_sub_period_id, inst_sub_id, inst_sub_period_no, inst_sub_period_from, inst_sub_period_to, 
    inst_sub_memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inst_sub_period
    where inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inst_sub_period
    where inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period (inst_sub_period_id, inst_sub_id, inst_sub_period_no, 
      inst_sub_period_from, inst_sub_period_to, inst_sub_memo
      )
    values (#{instSubPeriodId,jdbcType=INTEGER}, #{instSubId,jdbcType=INTEGER}, #{instSubPeriodNo,jdbcType=TINYINT}, 
      #{instSubPeriodFrom,jdbcType=INTEGER}, #{instSubPeriodTo,jdbcType=INTEGER}, #{instSubMemo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into inst_sub_period
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodId != null">
        inst_sub_period_id,
      </if>
      <if test="instSubId != null">
        inst_sub_id,
      </if>
      <if test="instSubPeriodNo != null">
        inst_sub_period_no,
      </if>
      <if test="instSubPeriodFrom != null">
        inst_sub_period_from,
      </if>
      <if test="instSubPeriodTo != null">
        inst_sub_period_to,
      </if>
      <if test="instSubMemo != null">
        inst_sub_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instSubPeriodId != null">
        #{instSubPeriodId,jdbcType=INTEGER},
      </if>
      <if test="instSubId != null">
        #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodNo != null">
        #{instSubPeriodNo,jdbcType=TINYINT},
      </if>
      <if test="instSubPeriodFrom != null">
        #{instSubPeriodFrom,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodTo != null">
        #{instSubPeriodTo,jdbcType=INTEGER},
      </if>
      <if test="instSubMemo != null">
        #{instSubMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period
    <set>
      <if test="instSubId != null">
        inst_sub_id = #{instSubId,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodNo != null">
        inst_sub_period_no = #{instSubPeriodNo,jdbcType=TINYINT},
      </if>
      <if test="instSubPeriodFrom != null">
        inst_sub_period_from = #{instSubPeriodFrom,jdbcType=INTEGER},
      </if>
      <if test="instSubPeriodTo != null">
        inst_sub_period_to = #{instSubPeriodTo,jdbcType=INTEGER},
      </if>
      <if test="instSubMemo != null">
        inst_sub_memo = #{instSubMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update inst_sub_period
    set inst_sub_id = #{instSubId,jdbcType=INTEGER},
      inst_sub_period_no = #{instSubPeriodNo,jdbcType=TINYINT},
      inst_sub_period_from = #{instSubPeriodFrom,jdbcType=INTEGER},
      inst_sub_period_to = #{instSubPeriodTo,jdbcType=INTEGER},
      inst_sub_memo = #{instSubMemo,jdbcType=VARCHAR}
    where inst_sub_period_id = #{instSubPeriodId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="partisan" jdbcType="VARCHAR" property="partisan" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phone1" jdbcType="VARCHAR" property="phone1" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="others" jdbcType="VARCHAR" property="others" />
    <result column="person_public_duty" jdbcType="VARCHAR" property="personPublicDuty" />
    <result column="person_awards" jdbcType="VARCHAR" property="personAwards" />
    <result column="education_id" jdbcType="INTEGER" property="educationId" />
    <result column="person_member_id" jdbcType="INTEGER" property="personMemberId" />
    <result column="person_member_date" jdbcType="INTEGER" property="personMemberDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    person_id, inst_id, name, sex, birthday, ethnic, partisan, mail, phone1, phone2, 
    qq, wechat, others, person_public_duty, person_awards, education_id, person_member_id, 
    person_member_date, memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member (person_id, inst_id, name, 
      sex, birthday, ethnic, 
      partisan, mail, phone1, 
      phone2, qq, wechat, 
      others, person_public_duty, person_awards, 
      education_id, person_member_id, person_member_date, 
      memo, stop)
    values (#{personId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=INTEGER}, #{ethnic,jdbcType=VARCHAR}, 
      #{partisan,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, 
      #{phone2,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{others,jdbcType=VARCHAR}, #{personPublicDuty,jdbcType=VARCHAR}, #{personAwards,jdbcType=VARCHAR}, 
      #{educationId,jdbcType=INTEGER}, #{personMemberId,jdbcType=INTEGER}, #{personMemberDate,jdbcType=INTEGER}, 
      #{memo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        person_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ethnic != null">
        ethnic,
      </if>
      <if test="partisan != null">
        partisan,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="phone1 != null">
        phone1,
      </if>
      <if test="phone2 != null">
        phone2,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="others != null">
        others,
      </if>
      <if test="personPublicDuty != null">
        person_public_duty,
      </if>
      <if test="personAwards != null">
        person_awards,
      </if>
      <if test="educationId != null">
        education_id,
      </if>
      <if test="personMemberId != null">
        person_member_id,
      </if>
      <if test="personMemberDate != null">
        person_member_date,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        ethnic = #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        partisan = #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        others = #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        person_awards = #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        education_id = #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        person_member_id = #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        person_member_date = #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    set inst_id = #{instId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      ethnic = #{ethnic,jdbcType=VARCHAR},
      partisan = #{partisan,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR},
      person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      person_awards = #{personAwards,jdbcType=VARCHAR},
      education_id = #{educationId,jdbcType=INTEGER},
      person_member_id = #{personMemberId,jdbcType=INTEGER},
      person_member_date = #{personMemberDate,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.graduate.engine.model.PersonMember">
    <id column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="inst_id" jdbcType="INTEGER" property="instId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="partisan" jdbcType="VARCHAR" property="partisan" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phone1" jdbcType="VARCHAR" property="phone1" />
    <result column="phone2" jdbcType="VARCHAR" property="phone2" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="others" jdbcType="VARCHAR" property="others" />
    <result column="person_public_duty" jdbcType="VARCHAR" property="personPublicDuty" />
    <result column="person_awards" jdbcType="VARCHAR" property="personAwards" />
    <result column="education_id" jdbcType="INTEGER" property="educationId" />
    <result column="person_member_id" jdbcType="INTEGER" property="personMemberId" />
    <result column="person_member_date" jdbcType="INTEGER" property="personMemberDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="stop" jdbcType="BIT" property="stop" />
  </resultMap>
  <sql id="Base_Column_List">
    person_id, inst_id, name, sex, birthday, ethnic, partisan, mail, phone1, phone2, 
    qq, wechat, others, person_public_duty, person_awards, education_id, person_member_id, 
    person_member_date, memo, stop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_member
    where person_id = #{personId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member (person_id, inst_id, name, 
      sex, birthday, ethnic, 
      partisan, mail, phone1, 
      phone2, qq, wechat, 
      others, person_public_duty, person_awards, 
      education_id, person_member_id, person_member_date, 
      memo, stop)
    values (#{personId,jdbcType=INTEGER}, #{instId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=INTEGER}, #{ethnic,jdbcType=VARCHAR}, 
      #{partisan,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{phone1,jdbcType=VARCHAR}, 
      #{phone2,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{others,jdbcType=VARCHAR}, #{personPublicDuty,jdbcType=VARCHAR}, #{personAwards,jdbcType=VARCHAR}, 
      #{educationId,jdbcType=INTEGER}, #{personMemberId,jdbcType=INTEGER}, #{personMemberDate,jdbcType=INTEGER}, 
      #{memo,jdbcType=VARCHAR}, #{stop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.graduate.engine.model.PersonMember">
    insert into person_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        person_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ethnic != null">
        ethnic,
      </if>
      <if test="partisan != null">
        partisan,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="phone1 != null">
        phone1,
      </if>
      <if test="phone2 != null">
        phone2,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="others != null">
        others,
      </if>
      <if test="personPublicDuty != null">
        person_public_duty,
      </if>
      <if test="personAwards != null">
        person_awards,
      </if>
      <if test="educationId != null">
        education_id,
      </if>
      <if test="personMemberId != null">
        person_member_id,
      </if>
      <if test="personMemberDate != null">
        person_member_date,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="stop != null">
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        #{stop,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="ethnic != null">
        ethnic = #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="partisan != null">
        partisan = #{partisan,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null">
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null">
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        others = #{others,jdbcType=VARCHAR},
      </if>
      <if test="personPublicDuty != null">
        person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      </if>
      <if test="personAwards != null">
        person_awards = #{personAwards,jdbcType=VARCHAR},
      </if>
      <if test="educationId != null">
        education_id = #{educationId,jdbcType=INTEGER},
      </if>
      <if test="personMemberId != null">
        person_member_id = #{personMemberId,jdbcType=INTEGER},
      </if>
      <if test="personMemberDate != null">
        person_member_date = #{personMemberDate,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stop != null">
        stop = #{stop,jdbcType=BIT},
      </if>
    </set>
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduate.engine.model.PersonMember">
    update person_member
    set inst_id = #{instId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      ethnic = #{ethnic,jdbcType=VARCHAR},
      partisan = #{partisan,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR},
      person_public_duty = #{personPublicDuty,jdbcType=VARCHAR},
      person_awards = #{personAwards,jdbcType=VARCHAR},
      education_id = #{educationId,jdbcType=INTEGER},
      person_member_id = #{personMemberId,jdbcType=INTEGER},
      person_member_date = #{personMemberDate,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=BIT}
    where person_id = #{personId,jdbcType=INTEGER}
  </update>
</mapper>